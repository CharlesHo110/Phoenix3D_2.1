// PX2CameraShake.pkg

	class CameraShake : public Effectable
	{
	public:
		CameraShake ();
		virtual ~CameraShake ();

		virtual void Play ();
		virtual void Stop ();

		void SetUseX (bool use);
		bool IsUseX () const;
		void SetUseY (bool use);
		bool IsUseY () const;
		void SetUseZ (bool use);
		bool IsUseZ () const;

		void SetMaxDistance (float dist);
		float GetMaxDistance () const;

		void SetEmitStrength (float strength);
		float GetEmitStrength () const;

		int GetShakeChannel () const;

		virtual const std::vector<std::string> &GetAllModuleNames_EA () const;
		virtual const std::vector<std::string> &GetAllModuleNames_EO () const;

		static int AllocChannel (float maxDist, bool useX, bool useY, bool useZ);
		static void FreeChannel (int channel);
		static void SetChannelShake (int channel, float strength, 
			const APoint &shakeObjPos);
		static float ShakeCamera (const APoint &recvCenter);

		enum { NUMSHAKEMAXCHANNELS=16 };
		static CameraShakeChannel ShakeChannels[NUMSHAKEMAXCHANNELS];

		static std::vector<std::string> msModuleNames_EA;
		static std::vector<std::string> msModuleNames_EO;
	};