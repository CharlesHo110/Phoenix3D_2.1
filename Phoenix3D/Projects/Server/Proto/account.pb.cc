// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "account.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace account_proto {

namespace {

const ::google::protobuf::Descriptor* CSReservedMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSReservedMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CARegAccountC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CARegAccountC_reflection_ = NULL;
const ::google::protobuf::Descriptor* CARegAccountS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CARegAccountS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CANewAccountC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CANewAccountC_reflection_ = NULL;
const ::google::protobuf::Descriptor* CANewAccountS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CANewAccountS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAServerListC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAServerListC_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAServerDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAServerDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAServerListS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAServerListS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAAuthAccountC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAAuthAccountC_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAAuthAccountS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAAuthAccountS_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAAuthAccountC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAAuthAccountC_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAAuthAccountS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAAuthAccountS_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAVerifyBuyC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAVerifyBuyC_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAVerifyBuyS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAVerifyBuyS_reflection_ = NULL;
const ::google::protobuf::Descriptor* GABuyNotifyC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GABuyNotifyC_reflection_ = NULL;
const ::google::protobuf::Descriptor* GABuyNotifyS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GABuyNotifyS_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAReportStatusC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAReportStatusC_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CAResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AccountPlatform_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PayPlatform_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ServerGroupType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_account_2eproto() {
  protobuf_AddDesc_account_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "account.proto");
  GOOGLE_CHECK(file != NULL);
  CSReservedMsg_descriptor_ = file->message_type(0);
  static const int CSReservedMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSReservedMsg, reserved_),
  };
  CSReservedMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSReservedMsg_descriptor_,
      CSReservedMsg::default_instance_,
      CSReservedMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSReservedMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSReservedMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSReservedMsg, _internal_metadata_),
      -1);
  CARegAccountC_descriptor_ = file->message_type(1);
  static const int CARegAccountC_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, passwd_md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, mobile_),
  };
  CARegAccountC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CARegAccountC_descriptor_,
      CARegAccountC::default_instance_,
      CARegAccountC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, _has_bits_[0]),
      -1,
      -1,
      sizeof(CARegAccountC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountC, _internal_metadata_),
      -1);
  CARegAccountS_descriptor_ = file->message_type(2);
  static const int CARegAccountS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountS, uin_),
  };
  CARegAccountS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CARegAccountS_descriptor_,
      CARegAccountS::default_instance_,
      CARegAccountS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CARegAccountS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CARegAccountS, _internal_metadata_),
      -1);
  CANewAccountC_descriptor_ = file->message_type(3);
  static const int CANewAccountC_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountC, device_id_),
  };
  CANewAccountC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CANewAccountC_descriptor_,
      CANewAccountC::default_instance_,
      CANewAccountC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountC, _has_bits_[0]),
      -1,
      -1,
      sizeof(CANewAccountC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountC, _internal_metadata_),
      -1);
  CANewAccountS_descriptor_ = file->message_type(4);
  static const int CANewAccountS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountS, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountS, passwd_md5_),
  };
  CANewAccountS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CANewAccountS_descriptor_,
      CANewAccountS::default_instance_,
      CANewAccountS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CANewAccountS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANewAccountS, _internal_metadata_),
      -1);
  CAServerListC_descriptor_ = file->message_type(5);
  static const int CAServerListC_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListC, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListC, svgroup_),
  };
  CAServerListC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CAServerListC_descriptor_,
      CAServerListC::default_instance_,
      CAServerListC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListC, _has_bits_[0]),
      -1,
      -1,
      sizeof(CAServerListC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListC, _internal_metadata_),
      -1);
  CAServerDesc_descriptor_ = file->message_type(6);
  static const int CAServerDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, port_),
  };
  CAServerDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CAServerDesc_descriptor_,
      CAServerDesc::default_instance_,
      CAServerDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, _has_bits_[0]),
      -1,
      -1,
      sizeof(CAServerDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerDesc, _internal_metadata_),
      -1);
  CAServerListS_descriptor_ = file->message_type(7);
  static const int CAServerListS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListS, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListS, desc_array_),
  };
  CAServerListS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CAServerListS_descriptor_,
      CAServerListS::default_instance_,
      CAServerListS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CAServerListS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAServerListS, _internal_metadata_),
      -1);
  CAAuthAccountC_descriptor_ = file->message_type(8);
  static const int CAAuthAccountC_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, passwd_md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, cpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, sid_),
  };
  CAAuthAccountC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CAAuthAccountC_descriptor_,
      CAAuthAccountC::default_instance_,
      CAAuthAccountC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, _has_bits_[0]),
      -1,
      -1,
      sizeof(CAAuthAccountC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountC, _internal_metadata_),
      -1);
  CAAuthAccountS_descriptor_ = file->message_type(9);
  static const int CAAuthAccountS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountS, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountS, uin_),
  };
  CAAuthAccountS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CAAuthAccountS_descriptor_,
      CAAuthAccountS::default_instance_,
      CAAuthAccountS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CAAuthAccountS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAAuthAccountS, _internal_metadata_),
      -1);
  GAAuthAccountC_descriptor_ = file->message_type(10);
  static const int GAAuthAccountC_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountC, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountC, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountC, clientid_),
  };
  GAAuthAccountC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GAAuthAccountC_descriptor_,
      GAAuthAccountC::default_instance_,
      GAAuthAccountC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountC, _has_bits_[0]),
      -1,
      -1,
      sizeof(GAAuthAccountC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountC, _internal_metadata_),
      -1);
  GAAuthAccountS_descriptor_ = file->message_type(11);
  static const int GAAuthAccountS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, info_),
  };
  GAAuthAccountS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GAAuthAccountS_descriptor_,
      GAAuthAccountS::default_instance_,
      GAAuthAccountS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, _has_bits_[0]),
      -1,
      -1,
      sizeof(GAAuthAccountS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAAuthAccountS, _internal_metadata_),
      -1);
  GAVerifyBuyC_descriptor_ = file->message_type(12);
  static const int GAVerifyBuyC_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, receipt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, price_),
  };
  GAVerifyBuyC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GAVerifyBuyC_descriptor_,
      GAVerifyBuyC::default_instance_,
      GAVerifyBuyC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, _has_bits_[0]),
      -1,
      -1,
      sizeof(GAVerifyBuyC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyC, _internal_metadata_),
      -1);
  GAVerifyBuyS_descriptor_ = file->message_type(13);
  static const int GAVerifyBuyS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, receipt_),
  };
  GAVerifyBuyS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GAVerifyBuyS_descriptor_,
      GAVerifyBuyS::default_instance_,
      GAVerifyBuyS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, _has_bits_[0]),
      -1,
      -1,
      sizeof(GAVerifyBuyS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAVerifyBuyS, _internal_metadata_),
      -1);
  GABuyNotifyC_descriptor_ = file->message_type(14);
  static const int GABuyNotifyC_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, receipt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, money_),
  };
  GABuyNotifyC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GABuyNotifyC_descriptor_,
      GABuyNotifyC::default_instance_,
      GABuyNotifyC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, _has_bits_[0]),
      -1,
      -1,
      sizeof(GABuyNotifyC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyC, _internal_metadata_),
      -1);
  GABuyNotifyS_descriptor_ = file->message_type(15);
  static const int GABuyNotifyS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyS, receipt_),
  };
  GABuyNotifyS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GABuyNotifyS_descriptor_,
      GABuyNotifyS::default_instance_,
      GABuyNotifyS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyS, _has_bits_[0]),
      -1,
      -1,
      sizeof(GABuyNotifyS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GABuyNotifyS, _internal_metadata_),
      -1);
  GAReportStatusC_descriptor_ = file->message_type(16);
  static const int GAReportStatusC_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, nconn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, nlogin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, servertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, cpu_),
  };
  GAReportStatusC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GAReportStatusC_descriptor_,
      GAReportStatusC::default_instance_,
      GAReportStatusC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, _has_bits_[0]),
      -1,
      -1,
      sizeof(GAReportStatusC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAReportStatusC, _internal_metadata_),
      -1);
  MsgType_descriptor_ = file->enum_type(0);
  CAResult_descriptor_ = file->enum_type(1);
  AccountPlatform_descriptor_ = file->enum_type(2);
  PayPlatform_descriptor_ = file->enum_type(3);
  ServerGroupType_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_account_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSReservedMsg_descriptor_, &CSReservedMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CARegAccountC_descriptor_, &CARegAccountC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CARegAccountS_descriptor_, &CARegAccountS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CANewAccountC_descriptor_, &CANewAccountC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CANewAccountS_descriptor_, &CANewAccountS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CAServerListC_descriptor_, &CAServerListC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CAServerDesc_descriptor_, &CAServerDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CAServerListS_descriptor_, &CAServerListS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CAAuthAccountC_descriptor_, &CAAuthAccountC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CAAuthAccountS_descriptor_, &CAAuthAccountS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GAAuthAccountC_descriptor_, &GAAuthAccountC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GAAuthAccountS_descriptor_, &GAAuthAccountS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GAVerifyBuyC_descriptor_, &GAVerifyBuyC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GAVerifyBuyS_descriptor_, &GAVerifyBuyS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GABuyNotifyC_descriptor_, &GABuyNotifyC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GABuyNotifyS_descriptor_, &GABuyNotifyS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GAReportStatusC_descriptor_, &GAReportStatusC::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_account_2eproto() {
  delete CSReservedMsg::default_instance_;
  delete CSReservedMsg_reflection_;
  delete CARegAccountC::default_instance_;
  delete CARegAccountC_reflection_;
  delete CARegAccountS::default_instance_;
  delete CARegAccountS_reflection_;
  delete CANewAccountC::default_instance_;
  delete CANewAccountC_reflection_;
  delete CANewAccountS::default_instance_;
  delete CANewAccountS_reflection_;
  delete CAServerListC::default_instance_;
  delete CAServerListC_reflection_;
  delete CAServerDesc::default_instance_;
  delete CAServerDesc_reflection_;
  delete CAServerListS::default_instance_;
  delete CAServerListS_reflection_;
  delete CAAuthAccountC::default_instance_;
  delete CAAuthAccountC_reflection_;
  delete CAAuthAccountS::default_instance_;
  delete CAAuthAccountS_reflection_;
  delete GAAuthAccountC::default_instance_;
  delete GAAuthAccountC_reflection_;
  delete GAAuthAccountS::default_instance_;
  delete GAAuthAccountS_reflection_;
  delete GAVerifyBuyC::default_instance_;
  delete GAVerifyBuyC_reflection_;
  delete GAVerifyBuyS::default_instance_;
  delete GAVerifyBuyS_reflection_;
  delete GABuyNotifyC::default_instance_;
  delete GABuyNotifyC_reflection_;
  delete GABuyNotifyS::default_instance_;
  delete GABuyNotifyS_reflection_;
  delete GAReportStatusC::default_instance_;
  delete GAReportStatusC_reflection_;
}

void protobuf_AddDesc_account_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\raccount.proto\022\raccount_proto\"!\n\rCSRese"
    "rvedMsg\022\020\n\010reserved\030\001 \002(\005\"O\n\rCARegAccoun"
    "tC\022\014\n\004name\030\001 \002(\t\022\022\n\npasswd_md5\030\002 \002(\t\022\014\n\004"
    "mail\030\003 \001(\t\022\016\n\006mobile\030\004 \001(\t\",\n\rCARegAccou"
    "ntS\022\016\n\006result\030\001 \002(\005\022\013\n\003uin\030\002 \001(\r\"\"\n\rCANe"
    "wAccountC\022\021\n\tdevice_id\030\001 \002(\t\"@\n\rCANewAcc"
    "ountS\022\016\n\006result\030\001 \002(\005\022\013\n\003uin\030\002 \001(\r\022\022\n\npa"
    "sswd_md5\030\003 \001(\t\"1\n\rCAServerListC\022\017\n\007versi"
    "on\030\001 \002(\005\022\017\n\007svgroup\030\002 \002(\005\"T\n\014CAServerDes"
    "c\022\n\n\002id\030\001 \002(\005\022\016\n\006status\030\002 \002(\005\022\014\n\004name\030\003 "
    "\001(\t\022\014\n\004addr\030\004 \001(\t\022\014\n\004port\030\005 \001(\005\"Q\n\rCASer"
    "verListS\022\017\n\007version\030\001 \002(\005\022/\n\ndesc_array\030"
    "\002 \003(\0132\033.account_proto.CAServerDesc\"\233\001\n\016C"
    "AAuthAccountC\0220\n\010platform\030\001 \002(\0162\036.accoun"
    "t_proto.AccountPlatform\022\014\n\004name\030\002 \001(\t\022\013\n"
    "\003uin\030\003 \001(\r\022\022\n\npasswd_md5\030\004 \001(\t\022\014\n\004cpid\030\005"
    " \001(\r\022\r\n\005appid\030\006 \001(\r\022\013\n\003sid\030\007 \001(\t\":\n\016CAAu"
    "thAccountS\022\016\n\006result\030\001 \002(\005\022\013\n\003sid\030\002 \001(\t\022"
    "\013\n\003uin\030\003 \001(\r\"<\n\016GAAuthAccountC\022\013\n\003uin\030\001 "
    "\002(\r\022\013\n\003sid\030\002 \002(\t\022\020\n\010clientid\030\003 \002(\r\"M\n\016GA"
    "AuthAccountS\022\016\n\006result\030\001 \002(\005\022\020\n\010clientid"
    "\030\003 \002(\r\022\013\n\003uin\030\004 \002(\r\022\014\n\004info\030\002 \001(\t\"]\n\014GAV"
    "erifyBuyC\022\020\n\010platform\030\001 \002(\005\022\013\n\003uin\030\002 \002(\r"
    "\022\016\n\006itemid\030\003 \002(\t\022\017\n\007receipt\030\004 \002(\t\022\r\n\005pri"
    "ce\030\005 \002(\005\"L\n\014GAVerifyBuyS\022\016\n\006result\030\001 \002(\005"
    "\022\013\n\003uin\030\002 \002(\r\022\016\n\006itemid\030\003 \002(\t\022\017\n\007receipt"
    "\030\004 \002(\t\"\210\001\n\014GABuyNotifyC\022,\n\010platform\030\001 \002("
    "\0162\032.account_proto.PayPlatform\022\013\n\003uin\030\002 \002"
    "(\r\022\016\n\006itemid\030\003 \002(\t\022\017\n\007receipt\030\004 \002(\t\022\r\n\005c"
    "ount\030\005 \002(\005\022\r\n\005money\030\006 \002(\005\"/\n\014GABuyNotify"
    "S\022\016\n\006result\030\001 \002(\005\022\017\n\007receipt\030\002 \002(\t\"a\n\017GA"
    "ReportStatusC\022\r\n\005nconn\030\001 \002(\005\022\016\n\006nlogin\030\002"
    " \002(\005\022\022\n\nservertime\030\003 \002(\r\022\016\n\006memory\030\004 \002(\005"
    "\022\013\n\003cpu\030\005 \002(\005*\274\001\n\007MsgType\022\017\n\013AP_RESERVED"
    "\020\000\022\022\n\016CA_REG_ACCOUNT\020\001\022\022\n\016CA_NEW_ACCOUNT"
    "\020\002\022\022\n\016CA_SERVER_LIST\020\003\022\023\n\017CA_AUTH_ACCOUN"
    "T\020\004\022\023\n\017GA_AUTH_ACCOUNT\020\005\022\021\n\rGA_VERIFY_BU"
    "Y\020\t\022\024\n\020GA_REPORT_STATUS\020\n\022\021\n\rGA_BUY_NOTI"
    "FY\020\013*\263\001\n\010CAResult\022\t\n\005RE_OK\020\000\022\030\n\024RE_REG_A"
    "CCOUNT_EXIST\020\001\022\025\n\021RE_AUTH_NOACCOUNT\020\002\022\025\n"
    "\021RE_AUTH_WRONG_PWD\020\003\022\022\n\016RE_AUTH_LOCKED\020\004"
    "\022\026\n\022RE_ACCOUNT_ILLEGAL\020\005\022\021\n\rRE_DATA_WRON"
    "G\020c\022\025\n\021RE_CONN_OUTSERVER\020d*G\n\017AccountPla"
    "tform\022\023\n\017ACCOUNT_DEFALUT\020\000\022\017\n\013ACCOUNT_36"
    "0\020\001\022\016\n\nACCOUNT_91\020\002*S\n\013PayPlatform\022\017\n\013PA"
    "Y_DEFAULT\020\000\022\021\n\rPAY_IOS_STORE\020\001\022\024\n\020PAY_GO"
    "OGLE_STORE\020\002\022\n\n\006PAY_91\020\003*<\n\017ServerGroupT"
    "ype\022\023\n\017SVGROUP_DEFAULT\020\000\022\024\n\020SVGROUP_HONG"
    "KONG\020\001", 1926);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "account.proto", &protobuf_RegisterTypes);
  CSReservedMsg::default_instance_ = new CSReservedMsg();
  CARegAccountC::default_instance_ = new CARegAccountC();
  CARegAccountS::default_instance_ = new CARegAccountS();
  CANewAccountC::default_instance_ = new CANewAccountC();
  CANewAccountS::default_instance_ = new CANewAccountS();
  CAServerListC::default_instance_ = new CAServerListC();
  CAServerDesc::default_instance_ = new CAServerDesc();
  CAServerListS::default_instance_ = new CAServerListS();
  CAAuthAccountC::default_instance_ = new CAAuthAccountC();
  CAAuthAccountS::default_instance_ = new CAAuthAccountS();
  GAAuthAccountC::default_instance_ = new GAAuthAccountC();
  GAAuthAccountS::default_instance_ = new GAAuthAccountS();
  GAVerifyBuyC::default_instance_ = new GAVerifyBuyC();
  GAVerifyBuyS::default_instance_ = new GAVerifyBuyS();
  GABuyNotifyC::default_instance_ = new GABuyNotifyC();
  GABuyNotifyS::default_instance_ = new GABuyNotifyS();
  GAReportStatusC::default_instance_ = new GAReportStatusC();
  CSReservedMsg::default_instance_->InitAsDefaultInstance();
  CARegAccountC::default_instance_->InitAsDefaultInstance();
  CARegAccountS::default_instance_->InitAsDefaultInstance();
  CANewAccountC::default_instance_->InitAsDefaultInstance();
  CANewAccountS::default_instance_->InitAsDefaultInstance();
  CAServerListC::default_instance_->InitAsDefaultInstance();
  CAServerDesc::default_instance_->InitAsDefaultInstance();
  CAServerListS::default_instance_->InitAsDefaultInstance();
  CAAuthAccountC::default_instance_->InitAsDefaultInstance();
  CAAuthAccountS::default_instance_->InitAsDefaultInstance();
  GAAuthAccountC::default_instance_->InitAsDefaultInstance();
  GAAuthAccountS::default_instance_->InitAsDefaultInstance();
  GAVerifyBuyC::default_instance_->InitAsDefaultInstance();
  GAVerifyBuyS::default_instance_->InitAsDefaultInstance();
  GABuyNotifyC::default_instance_->InitAsDefaultInstance();
  GABuyNotifyS::default_instance_->InitAsDefaultInstance();
  GAReportStatusC::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_account_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_account_2eproto {
  StaticDescriptorInitializer_account_2eproto() {
    protobuf_AddDesc_account_2eproto();
  }
} static_descriptor_initializer_account_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgType_descriptor_;
}
bool MsgType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CAResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAResult_descriptor_;
}
bool CAResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 99:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AccountPlatform_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountPlatform_descriptor_;
}
bool AccountPlatform_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PayPlatform_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PayPlatform_descriptor_;
}
bool PayPlatform_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerGroupType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerGroupType_descriptor_;
}
bool ServerGroupType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CSReservedMsg::kReservedFieldNumber;
#endif  // !_MSC_VER

CSReservedMsg::CSReservedMsg()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CSReservedMsg)
}

void CSReservedMsg::InitAsDefaultInstance() {
}

CSReservedMsg::CSReservedMsg(const CSReservedMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CSReservedMsg)
}

void CSReservedMsg::SharedCtor() {
  _cached_size_ = 0;
  reserved_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSReservedMsg::~CSReservedMsg() {
  // @@protoc_insertion_point(destructor:account_proto.CSReservedMsg)
  SharedDtor();
}

void CSReservedMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSReservedMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSReservedMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSReservedMsg_descriptor_;
}

const CSReservedMsg& CSReservedMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CSReservedMsg* CSReservedMsg::default_instance_ = NULL;

CSReservedMsg* CSReservedMsg::New(::google::protobuf::Arena* arena) const {
  CSReservedMsg* n = new CSReservedMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSReservedMsg::Clear() {
  reserved_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSReservedMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CSReservedMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 reserved = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_)));
          set_has_reserved();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CSReservedMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CSReservedMsg)
  return false;
#undef DO_
}

void CSReservedMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CSReservedMsg)
  // required int32 reserved = 1;
  if (has_reserved()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reserved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CSReservedMsg)
}

::google::protobuf::uint8* CSReservedMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CSReservedMsg)
  // required int32 reserved = 1;
  if (has_reserved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reserved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CSReservedMsg)
  return target;
}

int CSReservedMsg::ByteSize() const {
  int total_size = 0;

  // required int32 reserved = 1;
  if (has_reserved()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSReservedMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSReservedMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSReservedMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSReservedMsg::MergeFrom(const CSReservedMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reserved()) {
      set_reserved(from.reserved());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSReservedMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSReservedMsg::CopyFrom(const CSReservedMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSReservedMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSReservedMsg::Swap(CSReservedMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSReservedMsg::InternalSwap(CSReservedMsg* other) {
  std::swap(reserved_, other->reserved_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSReservedMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSReservedMsg_descriptor_;
  metadata.reflection = CSReservedMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSReservedMsg

// required int32 reserved = 1;
 bool CSReservedMsg::has_reserved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CSReservedMsg::set_has_reserved() {
  _has_bits_[0] |= 0x00000001u;
}
 void CSReservedMsg::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CSReservedMsg::clear_reserved() {
  reserved_ = 0;
  clear_has_reserved();
}
 ::google::protobuf::int32 CSReservedMsg::reserved() const {
  // @@protoc_insertion_point(field_get:account_proto.CSReservedMsg.reserved)
  return reserved_;
}
 void CSReservedMsg::set_reserved(::google::protobuf::int32 value) {
  set_has_reserved();
  reserved_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CSReservedMsg.reserved)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CARegAccountC::kNameFieldNumber;
const int CARegAccountC::kPasswdMd5FieldNumber;
const int CARegAccountC::kMailFieldNumber;
const int CARegAccountC::kMobileFieldNumber;
#endif  // !_MSC_VER

CARegAccountC::CARegAccountC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CARegAccountC)
}

void CARegAccountC::InitAsDefaultInstance() {
}

CARegAccountC::CARegAccountC(const CARegAccountC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CARegAccountC)
}

void CARegAccountC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CARegAccountC::~CARegAccountC() {
  // @@protoc_insertion_point(destructor:account_proto.CARegAccountC)
  SharedDtor();
}

void CARegAccountC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CARegAccountC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CARegAccountC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CARegAccountC_descriptor_;
}

const CARegAccountC& CARegAccountC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CARegAccountC* CARegAccountC::default_instance_ = NULL;

CARegAccountC* CARegAccountC::New(::google::protobuf::Arena* arena) const {
  CARegAccountC* n = new CARegAccountC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CARegAccountC::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_passwd_md5()) {
      passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mail()) {
      mail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mobile()) {
      mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CARegAccountC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CARegAccountC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CARegAccountC.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_passwd_md5;
        break;
      }

      // required string passwd_md5 = 2;
      case 2: {
        if (tag == 18) {
         parse_passwd_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd_md5().data(), this->passwd_md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CARegAccountC.passwd_md5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail;
        break;
      }

      // optional string mail = 3;
      case 3: {
        if (tag == 26) {
         parse_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail().data(), this->mail().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CARegAccountC.mail");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mobile;
        break;
      }

      // optional string mobile = 4;
      case 4: {
        if (tag == 34) {
         parse_mobile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CARegAccountC.mobile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CARegAccountC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CARegAccountC)
  return false;
#undef DO_
}

void CARegAccountC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CARegAccountC)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string passwd_md5 = 2;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.passwd_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd_md5(), output);
  }

  // optional string mail = 3;
  if (has_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail().data(), this->mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.mail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mail(), output);
  }

  // optional string mobile = 4;
  if (has_mobile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CARegAccountC)
}

::google::protobuf::uint8* CARegAccountC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CARegAccountC)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string passwd_md5 = 2;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.passwd_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd_md5(), target);
  }

  // optional string mail = 3;
  if (has_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail().data(), this->mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.mail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mail(), target);
  }

  // optional string mobile = 4;
  if (has_mobile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CARegAccountC.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CARegAccountC)
  return target;
}

int CARegAccountC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_passwd_md5()) {
    // required string passwd_md5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd_md5());
  }

  return total_size;
}
int CARegAccountC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string passwd_md5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd_md5());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12) {
    // optional string mail = 3;
    if (has_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail());
    }

    // optional string mobile = 4;
    if (has_mobile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mobile());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CARegAccountC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CARegAccountC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CARegAccountC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CARegAccountC::MergeFrom(const CARegAccountC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_passwd_md5()) {
      set_has_passwd_md5();
      passwd_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_md5_);
    }
    if (from.has_mail()) {
      set_has_mail();
      mail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_);
    }
    if (from.has_mobile()) {
      set_has_mobile();
      mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CARegAccountC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CARegAccountC::CopyFrom(const CARegAccountC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CARegAccountC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CARegAccountC::Swap(CARegAccountC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CARegAccountC::InternalSwap(CARegAccountC* other) {
  name_.Swap(&other->name_);
  passwd_md5_.Swap(&other->passwd_md5_);
  mail_.Swap(&other->mail_);
  mobile_.Swap(&other->mobile_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CARegAccountC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CARegAccountC_descriptor_;
  metadata.reflection = CARegAccountC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CARegAccountC

// required string name = 1;
 bool CARegAccountC::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CARegAccountC::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void CARegAccountC::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CARegAccountC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CARegAccountC::name() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountC.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountC.name)
}
 void CARegAccountC::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CARegAccountC.name)
}
 void CARegAccountC::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CARegAccountC.name)
}
 ::std::string* CARegAccountC::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:account_proto.CARegAccountC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CARegAccountC::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CARegAccountC.name)
}

// required string passwd_md5 = 2;
 bool CARegAccountC::has_passwd_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CARegAccountC::set_has_passwd_md5() {
  _has_bits_[0] |= 0x00000002u;
}
 void CARegAccountC::clear_has_passwd_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CARegAccountC::clear_passwd_md5() {
  passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd_md5();
}
 const ::std::string& CARegAccountC::passwd_md5() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountC.passwd_md5)
  return passwd_md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_passwd_md5(const ::std::string& value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountC.passwd_md5)
}
 void CARegAccountC::set_passwd_md5(const char* value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CARegAccountC.passwd_md5)
}
 void CARegAccountC::set_passwd_md5(const char* value, size_t size) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CARegAccountC.passwd_md5)
}
 ::std::string* CARegAccountC::mutable_passwd_md5() {
  set_has_passwd_md5();
  // @@protoc_insertion_point(field_mutable:account_proto.CARegAccountC.passwd_md5)
  return passwd_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CARegAccountC::release_passwd_md5() {
  clear_has_passwd_md5();
  return passwd_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_allocated_passwd_md5(::std::string* passwd_md5) {
  if (passwd_md5 != NULL) {
    set_has_passwd_md5();
  } else {
    clear_has_passwd_md5();
  }
  passwd_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd_md5);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CARegAccountC.passwd_md5)
}

// optional string mail = 3;
 bool CARegAccountC::has_mail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CARegAccountC::set_has_mail() {
  _has_bits_[0] |= 0x00000004u;
}
 void CARegAccountC::clear_has_mail() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CARegAccountC::clear_mail() {
  mail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail();
}
 const ::std::string& CARegAccountC::mail() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountC.mail)
  return mail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_mail(const ::std::string& value) {
  set_has_mail();
  mail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountC.mail)
}
 void CARegAccountC::set_mail(const char* value) {
  set_has_mail();
  mail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CARegAccountC.mail)
}
 void CARegAccountC::set_mail(const char* value, size_t size) {
  set_has_mail();
  mail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CARegAccountC.mail)
}
 ::std::string* CARegAccountC::mutable_mail() {
  set_has_mail();
  // @@protoc_insertion_point(field_mutable:account_proto.CARegAccountC.mail)
  return mail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CARegAccountC::release_mail() {
  clear_has_mail();
  return mail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_allocated_mail(::std::string* mail) {
  if (mail != NULL) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
  mail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CARegAccountC.mail)
}

// optional string mobile = 4;
 bool CARegAccountC::has_mobile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CARegAccountC::set_has_mobile() {
  _has_bits_[0] |= 0x00000008u;
}
 void CARegAccountC::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CARegAccountC::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mobile();
}
 const ::std::string& CARegAccountC::mobile() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountC.mobile)
  return mobile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_mobile(const ::std::string& value) {
  set_has_mobile();
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountC.mobile)
}
 void CARegAccountC::set_mobile(const char* value) {
  set_has_mobile();
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CARegAccountC.mobile)
}
 void CARegAccountC::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CARegAccountC.mobile)
}
 ::std::string* CARegAccountC::mutable_mobile() {
  set_has_mobile();
  // @@protoc_insertion_point(field_mutable:account_proto.CARegAccountC.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CARegAccountC::release_mobile() {
  clear_has_mobile();
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CARegAccountC::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CARegAccountC.mobile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CARegAccountS::kResultFieldNumber;
const int CARegAccountS::kUinFieldNumber;
#endif  // !_MSC_VER

CARegAccountS::CARegAccountS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CARegAccountS)
}

void CARegAccountS::InitAsDefaultInstance() {
}

CARegAccountS::CARegAccountS(const CARegAccountS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CARegAccountS)
}

void CARegAccountS::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  uin_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CARegAccountS::~CARegAccountS() {
  // @@protoc_insertion_point(destructor:account_proto.CARegAccountS)
  SharedDtor();
}

void CARegAccountS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CARegAccountS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CARegAccountS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CARegAccountS_descriptor_;
}

const CARegAccountS& CARegAccountS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CARegAccountS* CARegAccountS::default_instance_ = NULL;

CARegAccountS* CARegAccountS::New(::google::protobuf::Arena* arena) const {
  CARegAccountS* n = new CARegAccountS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CARegAccountS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CARegAccountS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, uin_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CARegAccountS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CARegAccountS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uin;
        break;
      }

      // optional uint32 uin = 2;
      case 2: {
        if (tag == 16) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CARegAccountS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CARegAccountS)
  return false;
#undef DO_
}

void CARegAccountS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CARegAccountS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 uin = 2;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CARegAccountS)
}

::google::protobuf::uint8* CARegAccountS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CARegAccountS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 uin = 2;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CARegAccountS)
  return target;
}

int CARegAccountS::ByteSize() const {
  int total_size = 0;

  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // optional uint32 uin = 2;
  if (has_uin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CARegAccountS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CARegAccountS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CARegAccountS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CARegAccountS::MergeFrom(const CARegAccountS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CARegAccountS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CARegAccountS::CopyFrom(const CARegAccountS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CARegAccountS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CARegAccountS::Swap(CARegAccountS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CARegAccountS::InternalSwap(CARegAccountS* other) {
  std::swap(result_, other->result_);
  std::swap(uin_, other->uin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CARegAccountS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CARegAccountS_descriptor_;
  metadata.reflection = CARegAccountS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CARegAccountS

// required int32 result = 1;
 bool CARegAccountS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CARegAccountS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void CARegAccountS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CARegAccountS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 CARegAccountS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountS.result)
  return result_;
}
 void CARegAccountS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountS.result)
}

// optional uint32 uin = 2;
 bool CARegAccountS::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CARegAccountS::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
 void CARegAccountS::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CARegAccountS::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 CARegAccountS::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.CARegAccountS.uin)
  return uin_;
}
 void CARegAccountS::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CARegAccountS.uin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CANewAccountC::kDeviceIdFieldNumber;
#endif  // !_MSC_VER

CANewAccountC::CANewAccountC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CANewAccountC)
}

void CANewAccountC::InitAsDefaultInstance() {
}

CANewAccountC::CANewAccountC(const CANewAccountC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CANewAccountC)
}

void CANewAccountC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CANewAccountC::~CANewAccountC() {
  // @@protoc_insertion_point(destructor:account_proto.CANewAccountC)
  SharedDtor();
}

void CANewAccountC::SharedDtor() {
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CANewAccountC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CANewAccountC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANewAccountC_descriptor_;
}

const CANewAccountC& CANewAccountC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CANewAccountC* CANewAccountC::default_instance_ = NULL;

CANewAccountC* CANewAccountC::New(::google::protobuf::Arena* arena) const {
  CANewAccountC* n = new CANewAccountC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CANewAccountC::Clear() {
  if (has_device_id()) {
    device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CANewAccountC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CANewAccountC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string device_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CANewAccountC.device_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CANewAccountC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CANewAccountC)
  return false;
#undef DO_
}

void CANewAccountC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CANewAccountC)
  // required string device_id = 1;
  if (has_device_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CANewAccountC.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CANewAccountC)
}

::google::protobuf::uint8* CANewAccountC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CANewAccountC)
  // required string device_id = 1;
  if (has_device_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CANewAccountC.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CANewAccountC)
  return target;
}

int CANewAccountC::ByteSize() const {
  int total_size = 0;

  // required string device_id = 1;
  if (has_device_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CANewAccountC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CANewAccountC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CANewAccountC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CANewAccountC::MergeFrom(const CANewAccountC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_device_id()) {
      set_has_device_id();
      device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CANewAccountC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CANewAccountC::CopyFrom(const CANewAccountC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CANewAccountC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CANewAccountC::Swap(CANewAccountC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CANewAccountC::InternalSwap(CANewAccountC* other) {
  device_id_.Swap(&other->device_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CANewAccountC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CANewAccountC_descriptor_;
  metadata.reflection = CANewAccountC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CANewAccountC

// required string device_id = 1;
 bool CANewAccountC::has_device_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CANewAccountC::set_has_device_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void CANewAccountC::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CANewAccountC::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_id();
}
 const ::std::string& CANewAccountC::device_id() const {
  // @@protoc_insertion_point(field_get:account_proto.CANewAccountC.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CANewAccountC::set_device_id(const ::std::string& value) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CANewAccountC.device_id)
}
 void CANewAccountC::set_device_id(const char* value) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CANewAccountC.device_id)
}
 void CANewAccountC::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CANewAccountC.device_id)
}
 ::std::string* CANewAccountC::mutable_device_id() {
  set_has_device_id();
  // @@protoc_insertion_point(field_mutable:account_proto.CANewAccountC.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CANewAccountC::release_device_id() {
  clear_has_device_id();
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CANewAccountC::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    set_has_device_id();
  } else {
    clear_has_device_id();
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CANewAccountC.device_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CANewAccountS::kResultFieldNumber;
const int CANewAccountS::kUinFieldNumber;
const int CANewAccountS::kPasswdMd5FieldNumber;
#endif  // !_MSC_VER

CANewAccountS::CANewAccountS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CANewAccountS)
}

void CANewAccountS::InitAsDefaultInstance() {
}

CANewAccountS::CANewAccountS(const CANewAccountS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CANewAccountS)
}

void CANewAccountS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  uin_ = 0u;
  passwd_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CANewAccountS::~CANewAccountS() {
  // @@protoc_insertion_point(destructor:account_proto.CANewAccountS)
  SharedDtor();
}

void CANewAccountS::SharedDtor() {
  passwd_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CANewAccountS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CANewAccountS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANewAccountS_descriptor_;
}

const CANewAccountS& CANewAccountS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CANewAccountS* CANewAccountS::default_instance_ = NULL;

CANewAccountS* CANewAccountS::New(::google::protobuf::Arena* arena) const {
  CANewAccountS* n = new CANewAccountS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CANewAccountS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CANewAccountS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(result_, uin_);
    if (has_passwd_md5()) {
      passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CANewAccountS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CANewAccountS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uin;
        break;
      }

      // optional uint32 uin = 2;
      case 2: {
        if (tag == 16) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_passwd_md5;
        break;
      }

      // optional string passwd_md5 = 3;
      case 3: {
        if (tag == 26) {
         parse_passwd_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd_md5().data(), this->passwd_md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CANewAccountS.passwd_md5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CANewAccountS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CANewAccountS)
  return false;
#undef DO_
}

void CANewAccountS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CANewAccountS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 uin = 2;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uin(), output);
  }

  // optional string passwd_md5 = 3;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CANewAccountS.passwd_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd_md5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CANewAccountS)
}

::google::protobuf::uint8* CANewAccountS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CANewAccountS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 uin = 2;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uin(), target);
  }

  // optional string passwd_md5 = 3;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CANewAccountS.passwd_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd_md5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CANewAccountS)
  return target;
}

int CANewAccountS::ByteSize() const {
  int total_size = 0;

  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional uint32 uin = 2;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uin());
    }

    // optional string passwd_md5 = 3;
    if (has_passwd_md5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passwd_md5());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CANewAccountS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CANewAccountS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CANewAccountS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CANewAccountS::MergeFrom(const CANewAccountS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_passwd_md5()) {
      set_has_passwd_md5();
      passwd_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_md5_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CANewAccountS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CANewAccountS::CopyFrom(const CANewAccountS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CANewAccountS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CANewAccountS::Swap(CANewAccountS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CANewAccountS::InternalSwap(CANewAccountS* other) {
  std::swap(result_, other->result_);
  std::swap(uin_, other->uin_);
  passwd_md5_.Swap(&other->passwd_md5_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CANewAccountS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CANewAccountS_descriptor_;
  metadata.reflection = CANewAccountS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CANewAccountS

// required int32 result = 1;
 bool CANewAccountS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CANewAccountS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void CANewAccountS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CANewAccountS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 CANewAccountS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.CANewAccountS.result)
  return result_;
}
 void CANewAccountS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CANewAccountS.result)
}

// optional uint32 uin = 2;
 bool CANewAccountS::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CANewAccountS::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
 void CANewAccountS::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CANewAccountS::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 CANewAccountS::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.CANewAccountS.uin)
  return uin_;
}
 void CANewAccountS::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CANewAccountS.uin)
}

// optional string passwd_md5 = 3;
 bool CANewAccountS::has_passwd_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CANewAccountS::set_has_passwd_md5() {
  _has_bits_[0] |= 0x00000004u;
}
 void CANewAccountS::clear_has_passwd_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CANewAccountS::clear_passwd_md5() {
  passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd_md5();
}
 const ::std::string& CANewAccountS::passwd_md5() const {
  // @@protoc_insertion_point(field_get:account_proto.CANewAccountS.passwd_md5)
  return passwd_md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CANewAccountS::set_passwd_md5(const ::std::string& value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CANewAccountS.passwd_md5)
}
 void CANewAccountS::set_passwd_md5(const char* value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CANewAccountS.passwd_md5)
}
 void CANewAccountS::set_passwd_md5(const char* value, size_t size) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CANewAccountS.passwd_md5)
}
 ::std::string* CANewAccountS::mutable_passwd_md5() {
  set_has_passwd_md5();
  // @@protoc_insertion_point(field_mutable:account_proto.CANewAccountS.passwd_md5)
  return passwd_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CANewAccountS::release_passwd_md5() {
  clear_has_passwd_md5();
  return passwd_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CANewAccountS::set_allocated_passwd_md5(::std::string* passwd_md5) {
  if (passwd_md5 != NULL) {
    set_has_passwd_md5();
  } else {
    clear_has_passwd_md5();
  }
  passwd_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd_md5);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CANewAccountS.passwd_md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CAServerListC::kVersionFieldNumber;
const int CAServerListC::kSvgroupFieldNumber;
#endif  // !_MSC_VER

CAServerListC::CAServerListC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CAServerListC)
}

void CAServerListC::InitAsDefaultInstance() {
}

CAServerListC::CAServerListC(const CAServerListC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CAServerListC)
}

void CAServerListC::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0;
  svgroup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAServerListC::~CAServerListC() {
  // @@protoc_insertion_point(destructor:account_proto.CAServerListC)
  SharedDtor();
}

void CAServerListC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CAServerListC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAServerListC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAServerListC_descriptor_;
}

const CAServerListC& CAServerListC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CAServerListC* CAServerListC::default_instance_ = NULL;

CAServerListC* CAServerListC::New(::google::protobuf::Arena* arena) const {
  CAServerListC* n = new CAServerListC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAServerListC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CAServerListC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, svgroup_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CAServerListC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CAServerListC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_svgroup;
        break;
      }

      // required int32 svgroup = 2;
      case 2: {
        if (tag == 16) {
         parse_svgroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svgroup_)));
          set_has_svgroup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CAServerListC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CAServerListC)
  return false;
#undef DO_
}

void CAServerListC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CAServerListC)
  // required int32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required int32 svgroup = 2;
  if (has_svgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->svgroup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CAServerListC)
}

::google::protobuf::uint8* CAServerListC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CAServerListC)
  // required int32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // required int32 svgroup = 2;
  if (has_svgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->svgroup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CAServerListC)
  return target;
}

int CAServerListC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_svgroup()) {
    // required int32 svgroup = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svgroup());
  }

  return total_size;
}
int CAServerListC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required int32 svgroup = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svgroup());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAServerListC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CAServerListC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAServerListC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAServerListC::MergeFrom(const CAServerListC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_svgroup()) {
      set_svgroup(from.svgroup());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CAServerListC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAServerListC::CopyFrom(const CAServerListC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAServerListC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CAServerListC::Swap(CAServerListC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAServerListC::InternalSwap(CAServerListC* other) {
  std::swap(version_, other->version_);
  std::swap(svgroup_, other->svgroup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAServerListC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAServerListC_descriptor_;
  metadata.reflection = CAServerListC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAServerListC

// required int32 version = 1;
 bool CAServerListC::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CAServerListC::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
 void CAServerListC::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CAServerListC::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::google::protobuf::int32 CAServerListC::version() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerListC.version)
  return version_;
}
 void CAServerListC::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerListC.version)
}

// required int32 svgroup = 2;
 bool CAServerListC::has_svgroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CAServerListC::set_has_svgroup() {
  _has_bits_[0] |= 0x00000002u;
}
 void CAServerListC::clear_has_svgroup() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CAServerListC::clear_svgroup() {
  svgroup_ = 0;
  clear_has_svgroup();
}
 ::google::protobuf::int32 CAServerListC::svgroup() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerListC.svgroup)
  return svgroup_;
}
 void CAServerListC::set_svgroup(::google::protobuf::int32 value) {
  set_has_svgroup();
  svgroup_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerListC.svgroup)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CAServerDesc::kIdFieldNumber;
const int CAServerDesc::kStatusFieldNumber;
const int CAServerDesc::kNameFieldNumber;
const int CAServerDesc::kAddrFieldNumber;
const int CAServerDesc::kPortFieldNumber;
#endif  // !_MSC_VER

CAServerDesc::CAServerDesc()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CAServerDesc)
}

void CAServerDesc::InitAsDefaultInstance() {
}

CAServerDesc::CAServerDesc(const CAServerDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CAServerDesc)
}

void CAServerDesc::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  status_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAServerDesc::~CAServerDesc() {
  // @@protoc_insertion_point(destructor:account_proto.CAServerDesc)
  SharedDtor();
}

void CAServerDesc::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CAServerDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAServerDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAServerDesc_descriptor_;
}

const CAServerDesc& CAServerDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CAServerDesc* CAServerDesc::default_instance_ = NULL;

CAServerDesc* CAServerDesc::New(::google::protobuf::Arena* arena) const {
  CAServerDesc* n = new CAServerDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAServerDesc::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CAServerDesc*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(id_, status_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_addr()) {
      addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    port_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CAServerDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CAServerDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAServerDesc.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_addr;
        break;
      }

      // optional string addr = 4;
      case 4: {
        if (tag == 34) {
         parse_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAServerDesc.addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_port;
        break;
      }

      // optional int32 port = 5;
      case 5: {
        if (tag == 40) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CAServerDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CAServerDesc)
  return false;
#undef DO_
}

void CAServerDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CAServerDesc)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAServerDesc.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string addr = 4;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAServerDesc.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->addr(), output);
  }

  // optional int32 port = 5;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CAServerDesc)
}

::google::protobuf::uint8* CAServerDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CAServerDesc)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAServerDesc.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string addr = 4;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAServerDesc.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->addr(), target);
  }

  // optional int32 port = 5;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CAServerDesc)
  return target;
}

int CAServerDesc::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_status()) {
    // required int32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  return total_size;
}
int CAServerDesc::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string addr = 4;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }

    // optional int32 port = 5;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAServerDesc::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CAServerDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAServerDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAServerDesc::MergeFrom(const CAServerDesc& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_addr()) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CAServerDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAServerDesc::CopyFrom(const CAServerDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAServerDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CAServerDesc::Swap(CAServerDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAServerDesc::InternalSwap(CAServerDesc* other) {
  std::swap(id_, other->id_);
  std::swap(status_, other->status_);
  name_.Swap(&other->name_);
  addr_.Swap(&other->addr_);
  std::swap(port_, other->port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAServerDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAServerDesc_descriptor_;
  metadata.reflection = CAServerDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAServerDesc

// required int32 id = 1;
 bool CAServerDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CAServerDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void CAServerDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CAServerDesc::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 CAServerDesc::id() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerDesc.id)
  return id_;
}
 void CAServerDesc::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerDesc.id)
}

// required int32 status = 2;
 bool CAServerDesc::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CAServerDesc::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
 void CAServerDesc::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CAServerDesc::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::google::protobuf::int32 CAServerDesc::status() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerDesc.status)
  return status_;
}
 void CAServerDesc::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerDesc.status)
}

// optional string name = 3;
 bool CAServerDesc::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CAServerDesc::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
 void CAServerDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CAServerDesc::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CAServerDesc::name() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerDesc.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAServerDesc::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAServerDesc.name)
}
 void CAServerDesc::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAServerDesc.name)
}
 void CAServerDesc::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAServerDesc.name)
}
 ::std::string* CAServerDesc::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:account_proto.CAServerDesc.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAServerDesc::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAServerDesc::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAServerDesc.name)
}

// optional string addr = 4;
 bool CAServerDesc::has_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CAServerDesc::set_has_addr() {
  _has_bits_[0] |= 0x00000008u;
}
 void CAServerDesc::clear_has_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CAServerDesc::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
 const ::std::string& CAServerDesc::addr() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerDesc.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAServerDesc::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAServerDesc.addr)
}
 void CAServerDesc::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAServerDesc.addr)
}
 void CAServerDesc::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAServerDesc.addr)
}
 ::std::string* CAServerDesc::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:account_proto.CAServerDesc.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAServerDesc::release_addr() {
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAServerDesc::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAServerDesc.addr)
}

// optional int32 port = 5;
 bool CAServerDesc::has_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CAServerDesc::set_has_port() {
  _has_bits_[0] |= 0x00000010u;
}
 void CAServerDesc::clear_has_port() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CAServerDesc::clear_port() {
  port_ = 0;
  clear_has_port();
}
 ::google::protobuf::int32 CAServerDesc::port() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerDesc.port)
  return port_;
}
 void CAServerDesc::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerDesc.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CAServerListS::kVersionFieldNumber;
const int CAServerListS::kDescArrayFieldNumber;
#endif  // !_MSC_VER

CAServerListS::CAServerListS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CAServerListS)
}

void CAServerListS::InitAsDefaultInstance() {
}

CAServerListS::CAServerListS(const CAServerListS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CAServerListS)
}

void CAServerListS::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAServerListS::~CAServerListS() {
  // @@protoc_insertion_point(destructor:account_proto.CAServerListS)
  SharedDtor();
}

void CAServerListS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CAServerListS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAServerListS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAServerListS_descriptor_;
}

const CAServerListS& CAServerListS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CAServerListS* CAServerListS::default_instance_ = NULL;

CAServerListS* CAServerListS::New(::google::protobuf::Arena* arena) const {
  CAServerListS* n = new CAServerListS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAServerListS::Clear() {
  version_ = 0;
  desc_array_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CAServerListS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CAServerListS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_desc_array;
        break;
      }

      // repeated .account_proto.CAServerDesc desc_array = 2;
      case 2: {
        if (tag == 18) {
         parse_desc_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_desc_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_desc_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CAServerListS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CAServerListS)
  return false;
#undef DO_
}

void CAServerListS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CAServerListS)
  // required int32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // repeated .account_proto.CAServerDesc desc_array = 2;
  for (unsigned int i = 0, n = this->desc_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->desc_array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CAServerListS)
}

::google::protobuf::uint8* CAServerListS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CAServerListS)
  // required int32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // repeated .account_proto.CAServerDesc desc_array = 2;
  for (unsigned int i = 0, n = this->desc_array_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->desc_array(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CAServerListS)
  return target;
}

int CAServerListS::ByteSize() const {
  int total_size = 0;

  // required int32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }
  // repeated .account_proto.CAServerDesc desc_array = 2;
  total_size += 1 * this->desc_array_size();
  for (int i = 0; i < this->desc_array_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->desc_array(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAServerListS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CAServerListS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAServerListS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAServerListS::MergeFrom(const CAServerListS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  desc_array_.MergeFrom(from.desc_array_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CAServerListS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAServerListS::CopyFrom(const CAServerListS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAServerListS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->desc_array())) return false;
  return true;
}

void CAServerListS::Swap(CAServerListS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAServerListS::InternalSwap(CAServerListS* other) {
  std::swap(version_, other->version_);
  desc_array_.UnsafeArenaSwap(&other->desc_array_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAServerListS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAServerListS_descriptor_;
  metadata.reflection = CAServerListS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAServerListS

// required int32 version = 1;
 bool CAServerListS::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CAServerListS::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
 void CAServerListS::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CAServerListS::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::google::protobuf::int32 CAServerListS::version() const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerListS.version)
  return version_;
}
 void CAServerListS::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAServerListS.version)
}

// repeated .account_proto.CAServerDesc desc_array = 2;
 int CAServerListS::desc_array_size() const {
  return desc_array_.size();
}
 void CAServerListS::clear_desc_array() {
  desc_array_.Clear();
}
 const ::account_proto::CAServerDesc& CAServerListS::desc_array(int index) const {
  // @@protoc_insertion_point(field_get:account_proto.CAServerListS.desc_array)
  return desc_array_.Get(index);
}
 ::account_proto::CAServerDesc* CAServerListS::mutable_desc_array(int index) {
  // @@protoc_insertion_point(field_mutable:account_proto.CAServerListS.desc_array)
  return desc_array_.Mutable(index);
}
 ::account_proto::CAServerDesc* CAServerListS::add_desc_array() {
  // @@protoc_insertion_point(field_add:account_proto.CAServerListS.desc_array)
  return desc_array_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::account_proto::CAServerDesc >&
CAServerListS::desc_array() const {
  // @@protoc_insertion_point(field_list:account_proto.CAServerListS.desc_array)
  return desc_array_;
}
 ::google::protobuf::RepeatedPtrField< ::account_proto::CAServerDesc >*
CAServerListS::mutable_desc_array() {
  // @@protoc_insertion_point(field_mutable_list:account_proto.CAServerListS.desc_array)
  return &desc_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CAAuthAccountC::kPlatformFieldNumber;
const int CAAuthAccountC::kNameFieldNumber;
const int CAAuthAccountC::kUinFieldNumber;
const int CAAuthAccountC::kPasswdMd5FieldNumber;
const int CAAuthAccountC::kCpidFieldNumber;
const int CAAuthAccountC::kAppidFieldNumber;
const int CAAuthAccountC::kSidFieldNumber;
#endif  // !_MSC_VER

CAAuthAccountC::CAAuthAccountC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CAAuthAccountC)
}

void CAAuthAccountC::InitAsDefaultInstance() {
}

CAAuthAccountC::CAAuthAccountC(const CAAuthAccountC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CAAuthAccountC)
}

void CAAuthAccountC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platform_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uin_ = 0u;
  passwd_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpid_ = 0u;
  appid_ = 0u;
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAAuthAccountC::~CAAuthAccountC() {
  // @@protoc_insertion_point(destructor:account_proto.CAAuthAccountC)
  SharedDtor();
}

void CAAuthAccountC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CAAuthAccountC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAAuthAccountC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAAuthAccountC_descriptor_;
}

const CAAuthAccountC& CAAuthAccountC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CAAuthAccountC* CAAuthAccountC::default_instance_ = NULL;

CAAuthAccountC* CAAuthAccountC::New(::google::protobuf::Arena* arena) const {
  CAAuthAccountC* n = new CAAuthAccountC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAAuthAccountC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CAAuthAccountC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(platform_, uin_);
    ZR_(cpid_, appid_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_passwd_md5()) {
      passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sid()) {
      sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CAAuthAccountC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CAAuthAccountC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .account_proto.AccountPlatform platform = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::account_proto::AccountPlatform_IsValid(value)) {
            set_platform(static_cast< ::account_proto::AccountPlatform >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAAuthAccountC.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uin;
        break;
      }

      // optional uint32 uin = 3;
      case 3: {
        if (tag == 24) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_passwd_md5;
        break;
      }

      // optional string passwd_md5 = 4;
      case 4: {
        if (tag == 34) {
         parse_passwd_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd_md5().data(), this->passwd_md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAAuthAccountC.passwd_md5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cpid;
        break;
      }

      // optional uint32 cpid = 5;
      case 5: {
        if (tag == 40) {
         parse_cpid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cpid_)));
          set_has_cpid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_appid;
        break;
      }

      // optional uint32 appid = 6;
      case 6: {
        if (tag == 48) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sid;
        break;
      }

      // optional string sid = 7;
      case 7: {
        if (tag == 58) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAAuthAccountC.sid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CAAuthAccountC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CAAuthAccountC)
  return false;
#undef DO_
}

void CAAuthAccountC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CAAuthAccountC)
  // required .account_proto.AccountPlatform platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->platform(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 uin = 3;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uin(), output);
  }

  // optional string passwd_md5 = 4;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.passwd_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->passwd_md5(), output);
  }

  // optional uint32 cpid = 5;
  if (has_cpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cpid(), output);
  }

  // optional uint32 appid = 6;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->appid(), output);
  }

  // optional string sid = 7;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.sid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CAAuthAccountC)
}

::google::protobuf::uint8* CAAuthAccountC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CAAuthAccountC)
  // required .account_proto.AccountPlatform platform = 1;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->platform(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 uin = 3;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uin(), target);
  }

  // optional string passwd_md5 = 4;
  if (has_passwd_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd_md5().data(), this->passwd_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.passwd_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->passwd_md5(), target);
  }

  // optional uint32 cpid = 5;
  if (has_cpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cpid(), target);
  }

  // optional uint32 appid = 6;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->appid(), target);
  }

  // optional string sid = 7;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountC.sid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CAAuthAccountC)
  return target;
}

int CAAuthAccountC::ByteSize() const {
  int total_size = 0;

  // required .account_proto.AccountPlatform platform = 1;
  if (has_platform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }
  if (_has_bits_[1 / 32] & 126) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 uin = 3;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uin());
    }

    // optional string passwd_md5 = 4;
    if (has_passwd_md5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passwd_md5());
    }

    // optional uint32 cpid = 5;
    if (has_cpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cpid());
    }

    // optional uint32 appid = 6;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional string sid = 7;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAAuthAccountC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CAAuthAccountC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAAuthAccountC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAAuthAccountC::MergeFrom(const CAAuthAccountC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_passwd_md5()) {
      set_has_passwd_md5();
      passwd_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_md5_);
    }
    if (from.has_cpid()) {
      set_cpid(from.cpid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_sid()) {
      set_has_sid();
      sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CAAuthAccountC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAAuthAccountC::CopyFrom(const CAAuthAccountC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAAuthAccountC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CAAuthAccountC::Swap(CAAuthAccountC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAAuthAccountC::InternalSwap(CAAuthAccountC* other) {
  std::swap(platform_, other->platform_);
  name_.Swap(&other->name_);
  std::swap(uin_, other->uin_);
  passwd_md5_.Swap(&other->passwd_md5_);
  std::swap(cpid_, other->cpid_);
  std::swap(appid_, other->appid_);
  sid_.Swap(&other->sid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAAuthAccountC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAAuthAccountC_descriptor_;
  metadata.reflection = CAAuthAccountC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAAuthAccountC

// required .account_proto.AccountPlatform platform = 1;
 bool CAAuthAccountC::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CAAuthAccountC::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
 void CAAuthAccountC::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CAAuthAccountC::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
 ::account_proto::AccountPlatform CAAuthAccountC::platform() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.platform)
  return static_cast< ::account_proto::AccountPlatform >(platform_);
}
 void CAAuthAccountC::set_platform(::account_proto::AccountPlatform value) {
  assert(::account_proto::AccountPlatform_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.platform)
}

// optional string name = 2;
 bool CAAuthAccountC::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CAAuthAccountC::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void CAAuthAccountC::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CAAuthAccountC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CAAuthAccountC::name() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.name)
}
 void CAAuthAccountC::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAAuthAccountC.name)
}
 void CAAuthAccountC::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAAuthAccountC.name)
}
 ::std::string* CAAuthAccountC::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:account_proto.CAAuthAccountC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAAuthAccountC::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAAuthAccountC.name)
}

// optional uint32 uin = 3;
 bool CAAuthAccountC::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CAAuthAccountC::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
 void CAAuthAccountC::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CAAuthAccountC::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 CAAuthAccountC::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.uin)
  return uin_;
}
 void CAAuthAccountC::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.uin)
}

// optional string passwd_md5 = 4;
 bool CAAuthAccountC::has_passwd_md5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CAAuthAccountC::set_has_passwd_md5() {
  _has_bits_[0] |= 0x00000008u;
}
 void CAAuthAccountC::clear_has_passwd_md5() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CAAuthAccountC::clear_passwd_md5() {
  passwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd_md5();
}
 const ::std::string& CAAuthAccountC::passwd_md5() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.passwd_md5)
  return passwd_md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_passwd_md5(const ::std::string& value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.passwd_md5)
}
 void CAAuthAccountC::set_passwd_md5(const char* value) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAAuthAccountC.passwd_md5)
}
 void CAAuthAccountC::set_passwd_md5(const char* value, size_t size) {
  set_has_passwd_md5();
  passwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAAuthAccountC.passwd_md5)
}
 ::std::string* CAAuthAccountC::mutable_passwd_md5() {
  set_has_passwd_md5();
  // @@protoc_insertion_point(field_mutable:account_proto.CAAuthAccountC.passwd_md5)
  return passwd_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAAuthAccountC::release_passwd_md5() {
  clear_has_passwd_md5();
  return passwd_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_allocated_passwd_md5(::std::string* passwd_md5) {
  if (passwd_md5 != NULL) {
    set_has_passwd_md5();
  } else {
    clear_has_passwd_md5();
  }
  passwd_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd_md5);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAAuthAccountC.passwd_md5)
}

// optional uint32 cpid = 5;
 bool CAAuthAccountC::has_cpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CAAuthAccountC::set_has_cpid() {
  _has_bits_[0] |= 0x00000010u;
}
 void CAAuthAccountC::clear_has_cpid() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CAAuthAccountC::clear_cpid() {
  cpid_ = 0u;
  clear_has_cpid();
}
 ::google::protobuf::uint32 CAAuthAccountC::cpid() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.cpid)
  return cpid_;
}
 void CAAuthAccountC::set_cpid(::google::protobuf::uint32 value) {
  set_has_cpid();
  cpid_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.cpid)
}

// optional uint32 appid = 6;
 bool CAAuthAccountC::has_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void CAAuthAccountC::set_has_appid() {
  _has_bits_[0] |= 0x00000020u;
}
 void CAAuthAccountC::clear_has_appid() {
  _has_bits_[0] &= ~0x00000020u;
}
 void CAAuthAccountC::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
 ::google::protobuf::uint32 CAAuthAccountC::appid() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.appid)
  return appid_;
}
 void CAAuthAccountC::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.appid)
}

// optional string sid = 7;
 bool CAAuthAccountC::has_sid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void CAAuthAccountC::set_has_sid() {
  _has_bits_[0] |= 0x00000040u;
}
 void CAAuthAccountC::clear_has_sid() {
  _has_bits_[0] &= ~0x00000040u;
}
 void CAAuthAccountC::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
 const ::std::string& CAAuthAccountC::sid() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountC.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountC.sid)
}
 void CAAuthAccountC::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAAuthAccountC.sid)
}
 void CAAuthAccountC::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAAuthAccountC.sid)
}
 ::std::string* CAAuthAccountC::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:account_proto.CAAuthAccountC.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAAuthAccountC::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountC::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAAuthAccountC.sid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CAAuthAccountS::kResultFieldNumber;
const int CAAuthAccountS::kSidFieldNumber;
const int CAAuthAccountS::kUinFieldNumber;
#endif  // !_MSC_VER

CAAuthAccountS::CAAuthAccountS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.CAAuthAccountS)
}

void CAAuthAccountS::InitAsDefaultInstance() {
}

CAAuthAccountS::CAAuthAccountS(const CAAuthAccountS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.CAAuthAccountS)
}

void CAAuthAccountS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uin_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAAuthAccountS::~CAAuthAccountS() {
  // @@protoc_insertion_point(destructor:account_proto.CAAuthAccountS)
  SharedDtor();
}

void CAAuthAccountS::SharedDtor() {
  sid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CAAuthAccountS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAAuthAccountS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAAuthAccountS_descriptor_;
}

const CAAuthAccountS& CAAuthAccountS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

CAAuthAccountS* CAAuthAccountS::default_instance_ = NULL;

CAAuthAccountS* CAAuthAccountS::New(::google::protobuf::Arena* arena) const {
  CAAuthAccountS* n = new CAAuthAccountS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAAuthAccountS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CAAuthAccountS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(result_, uin_);
    if (has_sid()) {
      sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CAAuthAccountS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.CAAuthAccountS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sid;
        break;
      }

      // optional string sid = 2;
      case 2: {
        if (tag == 18) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.CAAuthAccountS.sid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uin;
        break;
      }

      // optional uint32 uin = 3;
      case 3: {
        if (tag == 24) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.CAAuthAccountS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.CAAuthAccountS)
  return false;
#undef DO_
}

void CAAuthAccountS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.CAAuthAccountS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountS.sid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sid(), output);
  }

  // optional uint32 uin = 3;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.CAAuthAccountS)
}

::google::protobuf::uint8* CAAuthAccountS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.CAAuthAccountS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.CAAuthAccountS.sid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sid(), target);
  }

  // optional uint32 uin = 3;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.CAAuthAccountS)
  return target;
}

int CAAuthAccountS::ByteSize() const {
  int total_size = 0;

  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sid());
    }

    // optional uint32 uin = 3;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uin());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAAuthAccountS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CAAuthAccountS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAAuthAccountS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAAuthAccountS::MergeFrom(const CAAuthAccountS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_sid()) {
      set_has_sid();
      sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CAAuthAccountS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAAuthAccountS::CopyFrom(const CAAuthAccountS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAAuthAccountS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CAAuthAccountS::Swap(CAAuthAccountS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAAuthAccountS::InternalSwap(CAAuthAccountS* other) {
  std::swap(result_, other->result_);
  sid_.Swap(&other->sid_);
  std::swap(uin_, other->uin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAAuthAccountS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAAuthAccountS_descriptor_;
  metadata.reflection = CAAuthAccountS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAAuthAccountS

// required int32 result = 1;
 bool CAAuthAccountS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CAAuthAccountS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void CAAuthAccountS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CAAuthAccountS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 CAAuthAccountS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountS.result)
  return result_;
}
 void CAAuthAccountS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountS.result)
}

// optional string sid = 2;
 bool CAAuthAccountS::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CAAuthAccountS::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
 void CAAuthAccountS::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CAAuthAccountS::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
 const ::std::string& CAAuthAccountS::sid() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountS.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountS::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountS.sid)
}
 void CAAuthAccountS::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.CAAuthAccountS.sid)
}
 void CAAuthAccountS::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.CAAuthAccountS.sid)
}
 ::std::string* CAAuthAccountS::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:account_proto.CAAuthAccountS.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CAAuthAccountS::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CAAuthAccountS::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.CAAuthAccountS.sid)
}

// optional uint32 uin = 3;
 bool CAAuthAccountS::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CAAuthAccountS::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
 void CAAuthAccountS::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CAAuthAccountS::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 CAAuthAccountS::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.CAAuthAccountS.uin)
  return uin_;
}
 void CAAuthAccountS::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.CAAuthAccountS.uin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GAAuthAccountC::kUinFieldNumber;
const int GAAuthAccountC::kSidFieldNumber;
const int GAAuthAccountC::kClientidFieldNumber;
#endif  // !_MSC_VER

GAAuthAccountC::GAAuthAccountC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GAAuthAccountC)
}

void GAAuthAccountC::InitAsDefaultInstance() {
}

GAAuthAccountC::GAAuthAccountC(const GAAuthAccountC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GAAuthAccountC)
}

void GAAuthAccountC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uin_ = 0u;
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAAuthAccountC::~GAAuthAccountC() {
  // @@protoc_insertion_point(destructor:account_proto.GAAuthAccountC)
  SharedDtor();
}

void GAAuthAccountC::SharedDtor() {
  sid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GAAuthAccountC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAAuthAccountC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAAuthAccountC_descriptor_;
}

const GAAuthAccountC& GAAuthAccountC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GAAuthAccountC* GAAuthAccountC::default_instance_ = NULL;

GAAuthAccountC* GAAuthAccountC::New(::google::protobuf::Arena* arena) const {
  GAAuthAccountC* n = new GAAuthAccountC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GAAuthAccountC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GAAuthAccountC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(uin_, clientid_);
    if (has_sid()) {
      sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GAAuthAccountC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GAAuthAccountC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sid;
        break;
      }

      // required string sid = 2;
      case 2: {
        if (tag == 18) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAAuthAccountC.sid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_clientid;
        break;
      }

      // required uint32 clientid = 3;
      case 3: {
        if (tag == 24) {
         parse_clientid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GAAuthAccountC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GAAuthAccountC)
  return false;
#undef DO_
}

void GAAuthAccountC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GAAuthAccountC)
  // required uint32 uin = 1;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uin(), output);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAAuthAccountC.sid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sid(), output);
  }

  // required uint32 clientid = 3;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clientid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GAAuthAccountC)
}

::google::protobuf::uint8* GAAuthAccountC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GAAuthAccountC)
  // required uint32 uin = 1;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uin(), target);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAAuthAccountC.sid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sid(), target);
  }

  // required uint32 clientid = 3;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clientid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GAAuthAccountC)
  return target;
}

int GAAuthAccountC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_uin()) {
    // required uint32 uin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  if (has_sid()) {
    // required string sid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sid());
  }

  if (has_clientid()) {
    // required uint32 clientid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientid());
  }

  return total_size;
}
int GAAuthAccountC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 uin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());

    // required string sid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sid());

    // required uint32 clientid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAAuthAccountC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GAAuthAccountC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAAuthAccountC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAAuthAccountC::MergeFrom(const GAAuthAccountC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_sid()) {
      set_has_sid();
      sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GAAuthAccountC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAAuthAccountC::CopyFrom(const GAAuthAccountC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAAuthAccountC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GAAuthAccountC::Swap(GAAuthAccountC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAAuthAccountC::InternalSwap(GAAuthAccountC* other) {
  std::swap(uin_, other->uin_);
  sid_.Swap(&other->sid_);
  std::swap(clientid_, other->clientid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GAAuthAccountC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAAuthAccountC_descriptor_;
  metadata.reflection = GAAuthAccountC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GAAuthAccountC

// required uint32 uin = 1;
 bool GAAuthAccountC::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GAAuthAccountC::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
 void GAAuthAccountC::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GAAuthAccountC::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 GAAuthAccountC::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountC.uin)
  return uin_;
}
 void GAAuthAccountC::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountC.uin)
}

// required string sid = 2;
 bool GAAuthAccountC::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GAAuthAccountC::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
 void GAAuthAccountC::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GAAuthAccountC::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
 const ::std::string& GAAuthAccountC::sid() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountC.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAAuthAccountC::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountC.sid)
}
 void GAAuthAccountC::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAAuthAccountC.sid)
}
 void GAAuthAccountC::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAAuthAccountC.sid)
}
 ::std::string* GAAuthAccountC::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:account_proto.GAAuthAccountC.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAAuthAccountC::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAAuthAccountC::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAAuthAccountC.sid)
}

// required uint32 clientid = 3;
 bool GAAuthAccountC::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GAAuthAccountC::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
 void GAAuthAccountC::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GAAuthAccountC::clear_clientid() {
  clientid_ = 0u;
  clear_has_clientid();
}
 ::google::protobuf::uint32 GAAuthAccountC::clientid() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountC.clientid)
  return clientid_;
}
 void GAAuthAccountC::set_clientid(::google::protobuf::uint32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountC.clientid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GAAuthAccountS::kResultFieldNumber;
const int GAAuthAccountS::kClientidFieldNumber;
const int GAAuthAccountS::kUinFieldNumber;
const int GAAuthAccountS::kInfoFieldNumber;
#endif  // !_MSC_VER

GAAuthAccountS::GAAuthAccountS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GAAuthAccountS)
}

void GAAuthAccountS::InitAsDefaultInstance() {
}

GAAuthAccountS::GAAuthAccountS(const GAAuthAccountS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GAAuthAccountS)
}

void GAAuthAccountS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  clientid_ = 0u;
  uin_ = 0u;
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAAuthAccountS::~GAAuthAccountS() {
  // @@protoc_insertion_point(destructor:account_proto.GAAuthAccountS)
  SharedDtor();
}

void GAAuthAccountS::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GAAuthAccountS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAAuthAccountS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAAuthAccountS_descriptor_;
}

const GAAuthAccountS& GAAuthAccountS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GAAuthAccountS* GAAuthAccountS::default_instance_ = NULL;

GAAuthAccountS* GAAuthAccountS::New(::google::protobuf::Arena* arena) const {
  GAAuthAccountS* n = new GAAuthAccountS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GAAuthAccountS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GAAuthAccountS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(result_, clientid_);
    uin_ = 0u;
    if (has_info()) {
      info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GAAuthAccountS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GAAuthAccountS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional string info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAAuthAccountS.info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_clientid;
        break;
      }

      // required uint32 clientid = 3;
      case 3: {
        if (tag == 24) {
         parse_clientid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uin;
        break;
      }

      // required uint32 uin = 4;
      case 4: {
        if (tag == 32) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GAAuthAccountS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GAAuthAccountS)
  return false;
#undef DO_
}

void GAAuthAccountS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GAAuthAccountS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAAuthAccountS.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->info(), output);
  }

  // required uint32 clientid = 3;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clientid(), output);
  }

  // required uint32 uin = 4;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GAAuthAccountS)
}

::google::protobuf::uint8* GAAuthAccountS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GAAuthAccountS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAAuthAccountS.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->info(), target);
  }

  // required uint32 clientid = 3;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clientid(), target);
  }

  // required uint32 uin = 4;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GAAuthAccountS)
  return target;
}

int GAAuthAccountS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_result()) {
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (has_clientid()) {
    // required uint32 clientid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientid());
  }

  if (has_uin()) {
    // required uint32 uin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  return total_size;
}
int GAAuthAccountS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

    // required uint32 clientid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientid());

    // required uint32 uin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string info = 2;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAAuthAccountS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GAAuthAccountS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAAuthAccountS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAAuthAccountS::MergeFrom(const GAAuthAccountS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_info()) {
      set_has_info();
      info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GAAuthAccountS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAAuthAccountS::CopyFrom(const GAAuthAccountS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAAuthAccountS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GAAuthAccountS::Swap(GAAuthAccountS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAAuthAccountS::InternalSwap(GAAuthAccountS* other) {
  std::swap(result_, other->result_);
  std::swap(clientid_, other->clientid_);
  std::swap(uin_, other->uin_);
  info_.Swap(&other->info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GAAuthAccountS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAAuthAccountS_descriptor_;
  metadata.reflection = GAAuthAccountS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GAAuthAccountS

// required int32 result = 1;
 bool GAAuthAccountS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GAAuthAccountS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void GAAuthAccountS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GAAuthAccountS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 GAAuthAccountS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountS.result)
  return result_;
}
 void GAAuthAccountS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountS.result)
}

// required uint32 clientid = 3;
 bool GAAuthAccountS::has_clientid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GAAuthAccountS::set_has_clientid() {
  _has_bits_[0] |= 0x00000002u;
}
 void GAAuthAccountS::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GAAuthAccountS::clear_clientid() {
  clientid_ = 0u;
  clear_has_clientid();
}
 ::google::protobuf::uint32 GAAuthAccountS::clientid() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountS.clientid)
  return clientid_;
}
 void GAAuthAccountS::set_clientid(::google::protobuf::uint32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountS.clientid)
}

// required uint32 uin = 4;
 bool GAAuthAccountS::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GAAuthAccountS::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
 void GAAuthAccountS::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GAAuthAccountS::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 GAAuthAccountS::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountS.uin)
  return uin_;
}
 void GAAuthAccountS::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountS.uin)
}

// optional string info = 2;
 bool GAAuthAccountS::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void GAAuthAccountS::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
 void GAAuthAccountS::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
 void GAAuthAccountS::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
 const ::std::string& GAAuthAccountS::info() const {
  // @@protoc_insertion_point(field_get:account_proto.GAAuthAccountS.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAAuthAccountS::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAAuthAccountS.info)
}
 void GAAuthAccountS::set_info(const char* value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAAuthAccountS.info)
}
 void GAAuthAccountS::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAAuthAccountS.info)
}
 ::std::string* GAAuthAccountS::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:account_proto.GAAuthAccountS.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAAuthAccountS::release_info() {
  clear_has_info();
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAAuthAccountS::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAAuthAccountS.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GAVerifyBuyC::kPlatformFieldNumber;
const int GAVerifyBuyC::kUinFieldNumber;
const int GAVerifyBuyC::kItemidFieldNumber;
const int GAVerifyBuyC::kReceiptFieldNumber;
const int GAVerifyBuyC::kPriceFieldNumber;
#endif  // !_MSC_VER

GAVerifyBuyC::GAVerifyBuyC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GAVerifyBuyC)
}

void GAVerifyBuyC::InitAsDefaultInstance() {
}

GAVerifyBuyC::GAVerifyBuyC(const GAVerifyBuyC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GAVerifyBuyC)
}

void GAVerifyBuyC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platform_ = 0;
  uin_ = 0u;
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAVerifyBuyC::~GAVerifyBuyC() {
  // @@protoc_insertion_point(destructor:account_proto.GAVerifyBuyC)
  SharedDtor();
}

void GAVerifyBuyC::SharedDtor() {
  itemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GAVerifyBuyC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAVerifyBuyC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAVerifyBuyC_descriptor_;
}

const GAVerifyBuyC& GAVerifyBuyC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GAVerifyBuyC* GAVerifyBuyC::default_instance_ = NULL;

GAVerifyBuyC* GAVerifyBuyC::New(::google::protobuf::Arena* arena) const {
  GAVerifyBuyC* n = new GAVerifyBuyC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GAVerifyBuyC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GAVerifyBuyC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(platform_, uin_);
    if (has_itemid()) {
      itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_receipt()) {
      receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    price_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GAVerifyBuyC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GAVerifyBuyC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 platform = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platform_)));
          set_has_platform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uin;
        break;
      }

      // required uint32 uin = 2;
      case 2: {
        if (tag == 16) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_itemid;
        break;
      }

      // required string itemid = 3;
      case 3: {
        if (tag == 26) {
         parse_itemid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemid().data(), this->itemid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAVerifyBuyC.itemid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_receipt;
        break;
      }

      // required string receipt = 4;
      case 4: {
        if (tag == 34) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAVerifyBuyC.receipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // required int32 price = 5;
      case 5: {
        if (tag == 40) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GAVerifyBuyC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GAVerifyBuyC)
  return false;
#undef DO_
}

void GAVerifyBuyC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GAVerifyBuyC)
  // required int32 platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->platform(), output);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uin(), output);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyC.itemid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->itemid(), output);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyC.receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->receipt(), output);
  }

  // required int32 price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GAVerifyBuyC)
}

::google::protobuf::uint8* GAVerifyBuyC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GAVerifyBuyC)
  // required int32 platform = 1;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->platform(), target);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uin(), target);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyC.itemid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->itemid(), target);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyC.receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->receipt(), target);
  }

  // required int32 price = 5;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GAVerifyBuyC)
  return target;
}

int GAVerifyBuyC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_platform()) {
    // required int32 platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platform());
  }

  if (has_uin()) {
    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  if (has_itemid()) {
    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());
  }

  if (has_receipt()) {
    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());
  }

  if (has_price()) {
    // required int32 price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  return total_size;
}
int GAVerifyBuyC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platform());

    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());

    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());

    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());

    // required int32 price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAVerifyBuyC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GAVerifyBuyC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAVerifyBuyC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAVerifyBuyC::MergeFrom(const GAVerifyBuyC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_itemid()) {
      set_has_itemid();
      itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
    }
    if (from.has_receipt()) {
      set_has_receipt();
      receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GAVerifyBuyC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAVerifyBuyC::CopyFrom(const GAVerifyBuyC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAVerifyBuyC::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void GAVerifyBuyC::Swap(GAVerifyBuyC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAVerifyBuyC::InternalSwap(GAVerifyBuyC* other) {
  std::swap(platform_, other->platform_);
  std::swap(uin_, other->uin_);
  itemid_.Swap(&other->itemid_);
  receipt_.Swap(&other->receipt_);
  std::swap(price_, other->price_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GAVerifyBuyC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAVerifyBuyC_descriptor_;
  metadata.reflection = GAVerifyBuyC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GAVerifyBuyC

// required int32 platform = 1;
 bool GAVerifyBuyC::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GAVerifyBuyC::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
 void GAVerifyBuyC::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GAVerifyBuyC::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
 ::google::protobuf::int32 GAVerifyBuyC::platform() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyC.platform)
  return platform_;
}
 void GAVerifyBuyC::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyC.platform)
}

// required uint32 uin = 2;
 bool GAVerifyBuyC::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GAVerifyBuyC::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
 void GAVerifyBuyC::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GAVerifyBuyC::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 GAVerifyBuyC::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyC.uin)
  return uin_;
}
 void GAVerifyBuyC::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyC.uin)
}

// required string itemid = 3;
 bool GAVerifyBuyC::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GAVerifyBuyC::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
 void GAVerifyBuyC::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GAVerifyBuyC::clear_itemid() {
  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itemid();
}
 const ::std::string& GAVerifyBuyC::itemid() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyC.itemid)
  return itemid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyC::set_itemid(const ::std::string& value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyC.itemid)
}
 void GAVerifyBuyC::set_itemid(const char* value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAVerifyBuyC.itemid)
}
 void GAVerifyBuyC::set_itemid(const char* value, size_t size) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAVerifyBuyC.itemid)
}
 ::std::string* GAVerifyBuyC::mutable_itemid() {
  set_has_itemid();
  // @@protoc_insertion_point(field_mutable:account_proto.GAVerifyBuyC.itemid)
  return itemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAVerifyBuyC::release_itemid() {
  clear_has_itemid();
  return itemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyC::set_allocated_itemid(::std::string* itemid) {
  if (itemid != NULL) {
    set_has_itemid();
  } else {
    clear_has_itemid();
  }
  itemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAVerifyBuyC.itemid)
}

// required string receipt = 4;
 bool GAVerifyBuyC::has_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void GAVerifyBuyC::set_has_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
 void GAVerifyBuyC::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
 void GAVerifyBuyC::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
 const ::std::string& GAVerifyBuyC::receipt() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyC.receipt)
  return receipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyC::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyC.receipt)
}
 void GAVerifyBuyC::set_receipt(const char* value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAVerifyBuyC.receipt)
}
 void GAVerifyBuyC::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAVerifyBuyC.receipt)
}
 ::std::string* GAVerifyBuyC::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:account_proto.GAVerifyBuyC.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAVerifyBuyC::release_receipt() {
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyC::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAVerifyBuyC.receipt)
}

// required int32 price = 5;
 bool GAVerifyBuyC::has_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void GAVerifyBuyC::set_has_price() {
  _has_bits_[0] |= 0x00000010u;
}
 void GAVerifyBuyC::clear_has_price() {
  _has_bits_[0] &= ~0x00000010u;
}
 void GAVerifyBuyC::clear_price() {
  price_ = 0;
  clear_has_price();
}
 ::google::protobuf::int32 GAVerifyBuyC::price() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyC.price)
  return price_;
}
 void GAVerifyBuyC::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyC.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GAVerifyBuyS::kResultFieldNumber;
const int GAVerifyBuyS::kUinFieldNumber;
const int GAVerifyBuyS::kItemidFieldNumber;
const int GAVerifyBuyS::kReceiptFieldNumber;
#endif  // !_MSC_VER

GAVerifyBuyS::GAVerifyBuyS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GAVerifyBuyS)
}

void GAVerifyBuyS::InitAsDefaultInstance() {
}

GAVerifyBuyS::GAVerifyBuyS(const GAVerifyBuyS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GAVerifyBuyS)
}

void GAVerifyBuyS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  uin_ = 0u;
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAVerifyBuyS::~GAVerifyBuyS() {
  // @@protoc_insertion_point(destructor:account_proto.GAVerifyBuyS)
  SharedDtor();
}

void GAVerifyBuyS::SharedDtor() {
  itemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GAVerifyBuyS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAVerifyBuyS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAVerifyBuyS_descriptor_;
}

const GAVerifyBuyS& GAVerifyBuyS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GAVerifyBuyS* GAVerifyBuyS::default_instance_ = NULL;

GAVerifyBuyS* GAVerifyBuyS::New(::google::protobuf::Arena* arena) const {
  GAVerifyBuyS* n = new GAVerifyBuyS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GAVerifyBuyS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GAVerifyBuyS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(result_, uin_);
    if (has_itemid()) {
      itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_receipt()) {
      receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GAVerifyBuyS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GAVerifyBuyS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uin;
        break;
      }

      // required uint32 uin = 2;
      case 2: {
        if (tag == 16) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_itemid;
        break;
      }

      // required string itemid = 3;
      case 3: {
        if (tag == 26) {
         parse_itemid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemid().data(), this->itemid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAVerifyBuyS.itemid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_receipt;
        break;
      }

      // required string receipt = 4;
      case 4: {
        if (tag == 34) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GAVerifyBuyS.receipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GAVerifyBuyS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GAVerifyBuyS)
  return false;
#undef DO_
}

void GAVerifyBuyS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GAVerifyBuyS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uin(), output);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyS.itemid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->itemid(), output);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyS.receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->receipt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GAVerifyBuyS)
}

::google::protobuf::uint8* GAVerifyBuyS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GAVerifyBuyS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uin(), target);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyS.itemid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->itemid(), target);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GAVerifyBuyS.receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->receipt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GAVerifyBuyS)
  return target;
}

int GAVerifyBuyS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_result()) {
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (has_uin()) {
    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  if (has_itemid()) {
    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());
  }

  if (has_receipt()) {
    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());
  }

  return total_size;
}
int GAVerifyBuyS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());

    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());

    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAVerifyBuyS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GAVerifyBuyS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAVerifyBuyS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAVerifyBuyS::MergeFrom(const GAVerifyBuyS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_itemid()) {
      set_has_itemid();
      itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
    }
    if (from.has_receipt()) {
      set_has_receipt();
      receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GAVerifyBuyS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAVerifyBuyS::CopyFrom(const GAVerifyBuyS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAVerifyBuyS::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void GAVerifyBuyS::Swap(GAVerifyBuyS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAVerifyBuyS::InternalSwap(GAVerifyBuyS* other) {
  std::swap(result_, other->result_);
  std::swap(uin_, other->uin_);
  itemid_.Swap(&other->itemid_);
  receipt_.Swap(&other->receipt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GAVerifyBuyS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAVerifyBuyS_descriptor_;
  metadata.reflection = GAVerifyBuyS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GAVerifyBuyS

// required int32 result = 1;
 bool GAVerifyBuyS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GAVerifyBuyS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void GAVerifyBuyS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GAVerifyBuyS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 GAVerifyBuyS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyS.result)
  return result_;
}
 void GAVerifyBuyS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyS.result)
}

// required uint32 uin = 2;
 bool GAVerifyBuyS::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GAVerifyBuyS::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
 void GAVerifyBuyS::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GAVerifyBuyS::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 GAVerifyBuyS::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyS.uin)
  return uin_;
}
 void GAVerifyBuyS::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyS.uin)
}

// required string itemid = 3;
 bool GAVerifyBuyS::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GAVerifyBuyS::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
 void GAVerifyBuyS::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GAVerifyBuyS::clear_itemid() {
  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itemid();
}
 const ::std::string& GAVerifyBuyS::itemid() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyS.itemid)
  return itemid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyS::set_itemid(const ::std::string& value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyS.itemid)
}
 void GAVerifyBuyS::set_itemid(const char* value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAVerifyBuyS.itemid)
}
 void GAVerifyBuyS::set_itemid(const char* value, size_t size) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAVerifyBuyS.itemid)
}
 ::std::string* GAVerifyBuyS::mutable_itemid() {
  set_has_itemid();
  // @@protoc_insertion_point(field_mutable:account_proto.GAVerifyBuyS.itemid)
  return itemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAVerifyBuyS::release_itemid() {
  clear_has_itemid();
  return itemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyS::set_allocated_itemid(::std::string* itemid) {
  if (itemid != NULL) {
    set_has_itemid();
  } else {
    clear_has_itemid();
  }
  itemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAVerifyBuyS.itemid)
}

// required string receipt = 4;
 bool GAVerifyBuyS::has_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void GAVerifyBuyS::set_has_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
 void GAVerifyBuyS::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
 void GAVerifyBuyS::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
 const ::std::string& GAVerifyBuyS::receipt() const {
  // @@protoc_insertion_point(field_get:account_proto.GAVerifyBuyS.receipt)
  return receipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyS::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GAVerifyBuyS.receipt)
}
 void GAVerifyBuyS::set_receipt(const char* value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GAVerifyBuyS.receipt)
}
 void GAVerifyBuyS::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GAVerifyBuyS.receipt)
}
 ::std::string* GAVerifyBuyS::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:account_proto.GAVerifyBuyS.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GAVerifyBuyS::release_receipt() {
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GAVerifyBuyS::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GAVerifyBuyS.receipt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GABuyNotifyC::kPlatformFieldNumber;
const int GABuyNotifyC::kUinFieldNumber;
const int GABuyNotifyC::kItemidFieldNumber;
const int GABuyNotifyC::kReceiptFieldNumber;
const int GABuyNotifyC::kCountFieldNumber;
const int GABuyNotifyC::kMoneyFieldNumber;
#endif  // !_MSC_VER

GABuyNotifyC::GABuyNotifyC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GABuyNotifyC)
}

void GABuyNotifyC::InitAsDefaultInstance() {
}

GABuyNotifyC::GABuyNotifyC(const GABuyNotifyC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GABuyNotifyC)
}

void GABuyNotifyC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platform_ = 0;
  uin_ = 0u;
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GABuyNotifyC::~GABuyNotifyC() {
  // @@protoc_insertion_point(destructor:account_proto.GABuyNotifyC)
  SharedDtor();
}

void GABuyNotifyC::SharedDtor() {
  itemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GABuyNotifyC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GABuyNotifyC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GABuyNotifyC_descriptor_;
}

const GABuyNotifyC& GABuyNotifyC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GABuyNotifyC* GABuyNotifyC::default_instance_ = NULL;

GABuyNotifyC* GABuyNotifyC::New(::google::protobuf::Arena* arena) const {
  GABuyNotifyC* n = new GABuyNotifyC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GABuyNotifyC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GABuyNotifyC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(platform_, uin_);
    ZR_(count_, money_);
    if (has_itemid()) {
      itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_receipt()) {
      receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GABuyNotifyC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GABuyNotifyC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .account_proto.PayPlatform platform = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::account_proto::PayPlatform_IsValid(value)) {
            set_platform(static_cast< ::account_proto::PayPlatform >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uin;
        break;
      }

      // required uint32 uin = 2;
      case 2: {
        if (tag == 16) {
         parse_uin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_itemid;
        break;
      }

      // required string itemid = 3;
      case 3: {
        if (tag == 26) {
         parse_itemid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemid().data(), this->itemid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GABuyNotifyC.itemid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_receipt;
        break;
      }

      // required string receipt = 4;
      case 4: {
        if (tag == 34) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GABuyNotifyC.receipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // required int32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_money;
        break;
      }

      // required int32 money = 6;
      case 6: {
        if (tag == 48) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GABuyNotifyC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GABuyNotifyC)
  return false;
#undef DO_
}

void GABuyNotifyC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GABuyNotifyC)
  // required .account_proto.PayPlatform platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->platform(), output);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uin(), output);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyC.itemid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->itemid(), output);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyC.receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->receipt(), output);
  }

  // required int32 count = 5;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  // required int32 money = 6;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GABuyNotifyC)
}

::google::protobuf::uint8* GABuyNotifyC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GABuyNotifyC)
  // required .account_proto.PayPlatform platform = 1;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->platform(), target);
  }

  // required uint32 uin = 2;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uin(), target);
  }

  // required string itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyC.itemid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->itemid(), target);
  }

  // required string receipt = 4;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyC.receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->receipt(), target);
  }

  // required int32 count = 5;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  // required int32 money = 6;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GABuyNotifyC)
  return target;
}

int GABuyNotifyC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_platform()) {
    // required .account_proto.PayPlatform platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  if (has_uin()) {
    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());
  }

  if (has_itemid()) {
    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());
  }

  if (has_receipt()) {
    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());
  }

  if (has_count()) {
    // required int32 count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  if (has_money()) {
    // required int32 money = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  return total_size;
}
int GABuyNotifyC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required .account_proto.PayPlatform platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());

    // required uint32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uin());

    // required string itemid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());

    // required string receipt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());

    // required int32 count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

    // required int32 money = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GABuyNotifyC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GABuyNotifyC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GABuyNotifyC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GABuyNotifyC::MergeFrom(const GABuyNotifyC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_itemid()) {
      set_has_itemid();
      itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
    }
    if (from.has_receipt()) {
      set_has_receipt();
      receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GABuyNotifyC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GABuyNotifyC::CopyFrom(const GABuyNotifyC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GABuyNotifyC::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void GABuyNotifyC::Swap(GABuyNotifyC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GABuyNotifyC::InternalSwap(GABuyNotifyC* other) {
  std::swap(platform_, other->platform_);
  std::swap(uin_, other->uin_);
  itemid_.Swap(&other->itemid_);
  receipt_.Swap(&other->receipt_);
  std::swap(count_, other->count_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GABuyNotifyC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GABuyNotifyC_descriptor_;
  metadata.reflection = GABuyNotifyC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GABuyNotifyC

// required .account_proto.PayPlatform platform = 1;
 bool GABuyNotifyC::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GABuyNotifyC::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
 void GABuyNotifyC::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GABuyNotifyC::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
 ::account_proto::PayPlatform GABuyNotifyC::platform() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.platform)
  return static_cast< ::account_proto::PayPlatform >(platform_);
}
 void GABuyNotifyC::set_platform(::account_proto::PayPlatform value) {
  assert(::account_proto::PayPlatform_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.platform)
}

// required uint32 uin = 2;
 bool GABuyNotifyC::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GABuyNotifyC::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
 void GABuyNotifyC::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GABuyNotifyC::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
 ::google::protobuf::uint32 GABuyNotifyC::uin() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.uin)
  return uin_;
}
 void GABuyNotifyC::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.uin)
}

// required string itemid = 3;
 bool GABuyNotifyC::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GABuyNotifyC::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
 void GABuyNotifyC::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GABuyNotifyC::clear_itemid() {
  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itemid();
}
 const ::std::string& GABuyNotifyC::itemid() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.itemid)
  return itemid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyC::set_itemid(const ::std::string& value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.itemid)
}
 void GABuyNotifyC::set_itemid(const char* value) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GABuyNotifyC.itemid)
}
 void GABuyNotifyC::set_itemid(const char* value, size_t size) {
  set_has_itemid();
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GABuyNotifyC.itemid)
}
 ::std::string* GABuyNotifyC::mutable_itemid() {
  set_has_itemid();
  // @@protoc_insertion_point(field_mutable:account_proto.GABuyNotifyC.itemid)
  return itemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GABuyNotifyC::release_itemid() {
  clear_has_itemid();
  return itemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyC::set_allocated_itemid(::std::string* itemid) {
  if (itemid != NULL) {
    set_has_itemid();
  } else {
    clear_has_itemid();
  }
  itemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemid);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GABuyNotifyC.itemid)
}

// required string receipt = 4;
 bool GABuyNotifyC::has_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void GABuyNotifyC::set_has_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
 void GABuyNotifyC::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
 void GABuyNotifyC::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
 const ::std::string& GABuyNotifyC::receipt() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.receipt)
  return receipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyC::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.receipt)
}
 void GABuyNotifyC::set_receipt(const char* value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GABuyNotifyC.receipt)
}
 void GABuyNotifyC::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GABuyNotifyC.receipt)
}
 ::std::string* GABuyNotifyC::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:account_proto.GABuyNotifyC.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GABuyNotifyC::release_receipt() {
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyC::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GABuyNotifyC.receipt)
}

// required int32 count = 5;
 bool GABuyNotifyC::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void GABuyNotifyC::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
 void GABuyNotifyC::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
 void GABuyNotifyC::clear_count() {
  count_ = 0;
  clear_has_count();
}
 ::google::protobuf::int32 GABuyNotifyC::count() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.count)
  return count_;
}
 void GABuyNotifyC::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.count)
}

// required int32 money = 6;
 bool GABuyNotifyC::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void GABuyNotifyC::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
 void GABuyNotifyC::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
 void GABuyNotifyC::clear_money() {
  money_ = 0;
  clear_has_money();
}
 ::google::protobuf::int32 GABuyNotifyC::money() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyC.money)
  return money_;
}
 void GABuyNotifyC::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyC.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GABuyNotifyS::kResultFieldNumber;
const int GABuyNotifyS::kReceiptFieldNumber;
#endif  // !_MSC_VER

GABuyNotifyS::GABuyNotifyS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GABuyNotifyS)
}

void GABuyNotifyS::InitAsDefaultInstance() {
}

GABuyNotifyS::GABuyNotifyS(const GABuyNotifyS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GABuyNotifyS)
}

void GABuyNotifyS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GABuyNotifyS::~GABuyNotifyS() {
  // @@protoc_insertion_point(destructor:account_proto.GABuyNotifyS)
  SharedDtor();
}

void GABuyNotifyS::SharedDtor() {
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GABuyNotifyS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GABuyNotifyS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GABuyNotifyS_descriptor_;
}

const GABuyNotifyS& GABuyNotifyS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GABuyNotifyS* GABuyNotifyS::default_instance_ = NULL;

GABuyNotifyS* GABuyNotifyS::New(::google::protobuf::Arena* arena) const {
  GABuyNotifyS* n = new GABuyNotifyS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GABuyNotifyS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 0;
    if (has_receipt()) {
      receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GABuyNotifyS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GABuyNotifyS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_receipt;
        break;
      }

      // required string receipt = 2;
      case 2: {
        if (tag == 18) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_proto.GABuyNotifyS.receipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GABuyNotifyS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GABuyNotifyS)
  return false;
#undef DO_
}

void GABuyNotifyS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GABuyNotifyS)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required string receipt = 2;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyS.receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receipt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GABuyNotifyS)
}

::google::protobuf::uint8* GABuyNotifyS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GABuyNotifyS)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required string receipt = 2;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_proto.GABuyNotifyS.receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->receipt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GABuyNotifyS)
  return target;
}

int GABuyNotifyS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_result()) {
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (has_receipt()) {
    // required string receipt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());
  }

  return total_size;
}
int GABuyNotifyS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

    // required string receipt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GABuyNotifyS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GABuyNotifyS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GABuyNotifyS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GABuyNotifyS::MergeFrom(const GABuyNotifyS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_receipt()) {
      set_has_receipt();
      receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GABuyNotifyS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GABuyNotifyS::CopyFrom(const GABuyNotifyS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GABuyNotifyS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GABuyNotifyS::Swap(GABuyNotifyS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GABuyNotifyS::InternalSwap(GABuyNotifyS* other) {
  std::swap(result_, other->result_);
  receipt_.Swap(&other->receipt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GABuyNotifyS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GABuyNotifyS_descriptor_;
  metadata.reflection = GABuyNotifyS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GABuyNotifyS

// required int32 result = 1;
 bool GABuyNotifyS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GABuyNotifyS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
 void GABuyNotifyS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GABuyNotifyS::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 GABuyNotifyS::result() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyS.result)
  return result_;
}
 void GABuyNotifyS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyS.result)
}

// required string receipt = 2;
 bool GABuyNotifyS::has_receipt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GABuyNotifyS::set_has_receipt() {
  _has_bits_[0] |= 0x00000002u;
}
 void GABuyNotifyS::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GABuyNotifyS::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
 const ::std::string& GABuyNotifyS::receipt() const {
  // @@protoc_insertion_point(field_get:account_proto.GABuyNotifyS.receipt)
  return receipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyS::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:account_proto.GABuyNotifyS.receipt)
}
 void GABuyNotifyS::set_receipt(const char* value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:account_proto.GABuyNotifyS.receipt)
}
 void GABuyNotifyS::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:account_proto.GABuyNotifyS.receipt)
}
 ::std::string* GABuyNotifyS::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:account_proto.GABuyNotifyS.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GABuyNotifyS::release_receipt() {
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GABuyNotifyS::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:account_proto.GABuyNotifyS.receipt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GAReportStatusC::kNconnFieldNumber;
const int GAReportStatusC::kNloginFieldNumber;
const int GAReportStatusC::kServertimeFieldNumber;
const int GAReportStatusC::kMemoryFieldNumber;
const int GAReportStatusC::kCpuFieldNumber;
#endif  // !_MSC_VER

GAReportStatusC::GAReportStatusC()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:account_proto.GAReportStatusC)
}

void GAReportStatusC::InitAsDefaultInstance() {
}

GAReportStatusC::GAReportStatusC(const GAReportStatusC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:account_proto.GAReportStatusC)
}

void GAReportStatusC::SharedCtor() {
  _cached_size_ = 0;
  nconn_ = 0;
  nlogin_ = 0;
  servertime_ = 0u;
  memory_ = 0;
  cpu_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAReportStatusC::~GAReportStatusC() {
  // @@protoc_insertion_point(destructor:account_proto.GAReportStatusC)
  SharedDtor();
}

void GAReportStatusC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GAReportStatusC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAReportStatusC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAReportStatusC_descriptor_;
}

const GAReportStatusC& GAReportStatusC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_2eproto();
  return *default_instance_;
}

GAReportStatusC* GAReportStatusC::default_instance_ = NULL;

GAReportStatusC* GAReportStatusC::New(::google::protobuf::Arena* arena) const {
  GAReportStatusC* n = new GAReportStatusC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GAReportStatusC::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GAReportStatusC*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(nconn_, cpu_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GAReportStatusC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:account_proto.GAReportStatusC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nconn = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconn_)));
          set_has_nconn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nlogin;
        break;
      }

      // required int32 nlogin = 2;
      case 2: {
        if (tag == 16) {
         parse_nlogin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlogin_)));
          set_has_nlogin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_servertime;
        break;
      }

      // required uint32 servertime = 3;
      case 3: {
        if (tag == 24) {
         parse_servertime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertime_)));
          set_has_servertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_memory;
        break;
      }

      // required int32 memory = 4;
      case 4: {
        if (tag == 32) {
         parse_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_)));
          set_has_memory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cpu;
        break;
      }

      // required int32 cpu = 5;
      case 5: {
        if (tag == 40) {
         parse_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cpu_)));
          set_has_cpu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:account_proto.GAReportStatusC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:account_proto.GAReportStatusC)
  return false;
#undef DO_
}

void GAReportStatusC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:account_proto.GAReportStatusC)
  // required int32 nconn = 1;
  if (has_nconn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nconn(), output);
  }

  // required int32 nlogin = 2;
  if (has_nlogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nlogin(), output);
  }

  // required uint32 servertime = 3;
  if (has_servertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->servertime(), output);
  }

  // required int32 memory = 4;
  if (has_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->memory(), output);
  }

  // required int32 cpu = 5;
  if (has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cpu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:account_proto.GAReportStatusC)
}

::google::protobuf::uint8* GAReportStatusC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_proto.GAReportStatusC)
  // required int32 nconn = 1;
  if (has_nconn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nconn(), target);
  }

  // required int32 nlogin = 2;
  if (has_nlogin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nlogin(), target);
  }

  // required uint32 servertime = 3;
  if (has_servertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->servertime(), target);
  }

  // required int32 memory = 4;
  if (has_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->memory(), target);
  }

  // required int32 cpu = 5;
  if (has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cpu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_proto.GAReportStatusC)
  return target;
}

int GAReportStatusC::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_nconn()) {
    // required int32 nconn = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nconn());
  }

  if (has_nlogin()) {
    // required int32 nlogin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlogin());
  }

  if (has_servertime()) {
    // required uint32 servertime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertime());
  }

  if (has_memory()) {
    // required int32 memory = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory());
  }

  if (has_cpu()) {
    // required int32 cpu = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cpu());
  }

  return total_size;
}
int GAReportStatusC::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 nconn = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nconn());

    // required int32 nlogin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlogin());

    // required uint32 servertime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertime());

    // required int32 memory = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory());

    // required int32 cpu = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cpu());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAReportStatusC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GAReportStatusC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAReportStatusC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAReportStatusC::MergeFrom(const GAReportStatusC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nconn()) {
      set_nconn(from.nconn());
    }
    if (from.has_nlogin()) {
      set_nlogin(from.nlogin());
    }
    if (from.has_servertime()) {
      set_servertime(from.servertime());
    }
    if (from.has_memory()) {
      set_memory(from.memory());
    }
    if (from.has_cpu()) {
      set_cpu(from.cpu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GAReportStatusC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAReportStatusC::CopyFrom(const GAReportStatusC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAReportStatusC::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void GAReportStatusC::Swap(GAReportStatusC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAReportStatusC::InternalSwap(GAReportStatusC* other) {
  std::swap(nconn_, other->nconn_);
  std::swap(nlogin_, other->nlogin_);
  std::swap(servertime_, other->servertime_);
  std::swap(memory_, other->memory_);
  std::swap(cpu_, other->cpu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GAReportStatusC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAReportStatusC_descriptor_;
  metadata.reflection = GAReportStatusC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GAReportStatusC

// required int32 nconn = 1;
 bool GAReportStatusC::has_nconn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GAReportStatusC::set_has_nconn() {
  _has_bits_[0] |= 0x00000001u;
}
 void GAReportStatusC::clear_has_nconn() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GAReportStatusC::clear_nconn() {
  nconn_ = 0;
  clear_has_nconn();
}
 ::google::protobuf::int32 GAReportStatusC::nconn() const {
  // @@protoc_insertion_point(field_get:account_proto.GAReportStatusC.nconn)
  return nconn_;
}
 void GAReportStatusC::set_nconn(::google::protobuf::int32 value) {
  set_has_nconn();
  nconn_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAReportStatusC.nconn)
}

// required int32 nlogin = 2;
 bool GAReportStatusC::has_nlogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GAReportStatusC::set_has_nlogin() {
  _has_bits_[0] |= 0x00000002u;
}
 void GAReportStatusC::clear_has_nlogin() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GAReportStatusC::clear_nlogin() {
  nlogin_ = 0;
  clear_has_nlogin();
}
 ::google::protobuf::int32 GAReportStatusC::nlogin() const {
  // @@protoc_insertion_point(field_get:account_proto.GAReportStatusC.nlogin)
  return nlogin_;
}
 void GAReportStatusC::set_nlogin(::google::protobuf::int32 value) {
  set_has_nlogin();
  nlogin_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAReportStatusC.nlogin)
}

// required uint32 servertime = 3;
 bool GAReportStatusC::has_servertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void GAReportStatusC::set_has_servertime() {
  _has_bits_[0] |= 0x00000004u;
}
 void GAReportStatusC::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000004u;
}
 void GAReportStatusC::clear_servertime() {
  servertime_ = 0u;
  clear_has_servertime();
}
 ::google::protobuf::uint32 GAReportStatusC::servertime() const {
  // @@protoc_insertion_point(field_get:account_proto.GAReportStatusC.servertime)
  return servertime_;
}
 void GAReportStatusC::set_servertime(::google::protobuf::uint32 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAReportStatusC.servertime)
}

// required int32 memory = 4;
 bool GAReportStatusC::has_memory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void GAReportStatusC::set_has_memory() {
  _has_bits_[0] |= 0x00000008u;
}
 void GAReportStatusC::clear_has_memory() {
  _has_bits_[0] &= ~0x00000008u;
}
 void GAReportStatusC::clear_memory() {
  memory_ = 0;
  clear_has_memory();
}
 ::google::protobuf::int32 GAReportStatusC::memory() const {
  // @@protoc_insertion_point(field_get:account_proto.GAReportStatusC.memory)
  return memory_;
}
 void GAReportStatusC::set_memory(::google::protobuf::int32 value) {
  set_has_memory();
  memory_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAReportStatusC.memory)
}

// required int32 cpu = 5;
 bool GAReportStatusC::has_cpu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void GAReportStatusC::set_has_cpu() {
  _has_bits_[0] |= 0x00000010u;
}
 void GAReportStatusC::clear_has_cpu() {
  _has_bits_[0] &= ~0x00000010u;
}
 void GAReportStatusC::clear_cpu() {
  cpu_ = 0;
  clear_has_cpu();
}
 ::google::protobuf::int32 GAReportStatusC::cpu() const {
  // @@protoc_insertion_point(field_get:account_proto.GAReportStatusC.cpu)
  return cpu_;
}
 void GAReportStatusC::set_cpu(::google::protobuf::int32 value) {
  set_has_cpu();
  cpu_ = value;
  // @@protoc_insertion_point(field_set:account_proto.GAReportStatusC.cpu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace account_proto

// @@protoc_insertion_point(global_scope)
